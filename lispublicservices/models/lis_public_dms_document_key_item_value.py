# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicDMSDocumentKeyItemValue(object):

    """Implementation of the 'LISPublicDMSDocumentKeyItemValue' model.

    Key item value for the document selection

    Attributes:
        key_item_name (string): Gets or sets the name of the key item.
        key_item_value (string): Gets or sets the key item value from.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "key_item_name": 'keyItemName',
        "key_item_value": 'keyItemValue'
    }

    _optionals = [
        'key_item_name',
        'key_item_value',
    ]

    def __init__(self,
                 key_item_name=APIHelper.SKIP,
                 key_item_value=APIHelper.SKIP):
        """Constructor for the LISPublicDMSDocumentKeyItemValue class"""

        # Initialize members of the class
        if key_item_name is not APIHelper.SKIP:
            self.key_item_name = key_item_name 
        if key_item_value is not APIHelper.SKIP:
            self.key_item_value = key_item_value 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        key_item_name = dictionary.get("keyItemName") if dictionary.get("keyItemName") else APIHelper.SKIP
        key_item_value = dictionary.get("keyItemValue") if dictionary.get("keyItemValue") else APIHelper.SKIP
        # Return an object of this model
        return cls(key_item_name,
                   key_item_value)
