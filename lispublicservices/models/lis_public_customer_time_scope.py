# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper
from lispublicservices.models.lis_public_customer_business_time import LISPublicCustomerBusinessTime
from lispublicservices.models.lis_public_customer_closed_date import LISPublicCustomerClosedDate


class LISPublicCustomerTimeScope(object):

    """Implementation of the 'LISPublicCustomerTimeScope' model.

    The LISCustomerTimeScope data contract.

    Attributes:
        business_times (list of LISPublicCustomerBusinessTime): Gets or sets
            BusinessTimes.
        closed_dates (list of LISPublicCustomerClosedDate): Gets or sets
            ClosedDates.
        federal_state (string): Gets or sets the state of the federal.
        tolerance_minutes (int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "business_times": 'businessTimes',
        "closed_dates": 'closedDates',
        "federal_state": 'federalState',
        "tolerance_minutes": 'toleranceMinutes'
    }

    _optionals = [
        'business_times',
        'closed_dates',
        'federal_state',
        'tolerance_minutes',
    ]

    def __init__(self,
                 business_times=APIHelper.SKIP,
                 closed_dates=APIHelper.SKIP,
                 federal_state=APIHelper.SKIP,
                 tolerance_minutes=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerTimeScope class"""

        # Initialize members of the class
        if business_times is not APIHelper.SKIP:
            self.business_times = business_times 
        if closed_dates is not APIHelper.SKIP:
            self.closed_dates = closed_dates 
        if federal_state is not APIHelper.SKIP:
            self.federal_state = federal_state 
        if tolerance_minutes is not APIHelper.SKIP:
            self.tolerance_minutes = tolerance_minutes 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        business_times = None
        if dictionary.get('businessTimes') is not None:
            business_times = [LISPublicCustomerBusinessTime.from_dictionary(x) for x in dictionary.get('businessTimes')]
        else:
            business_times = APIHelper.SKIP
        closed_dates = None
        if dictionary.get('closedDates') is not None:
            closed_dates = [LISPublicCustomerClosedDate.from_dictionary(x) for x in dictionary.get('closedDates')]
        else:
            closed_dates = APIHelper.SKIP
        federal_state = dictionary.get("federalState") if dictionary.get("federalState") else APIHelper.SKIP
        tolerance_minutes = dictionary.get("toleranceMinutes") if dictionary.get("toleranceMinutes") else APIHelper.SKIP
        # Return an object of this model
        return cls(business_times,
                   closed_dates,
                   federal_state,
                   tolerance_minutes)
