# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerCustomsScope(object):

    """Implementation of the 'LISPublicCustomerCustomsScope' model.

    The LISCustomerCustomsScope data contract.

    Attributes:
        own_customs_number (string): Gets or sets OwnCustomsNumber.
        is_intra_stat_active (bool): Gets or sets a value indicating whether
            this instance is intra stat active.
        intra_stat_from (datetime): Gets or sets the intra stat from.
        intra_stat_till (datetime): Gets or sets the intra stat till.
        tax_number (string): Gets or sets the tax number.
        distinction_no (int): Gets or sets the distinction no.
        business_type (int): Gets or sets the type of the business.
        process_type (string): Gets or sets the type of the process.
        process_type_national (string): Gets or sets the process type
            numeric.
        print_export_documents (bool): Gets or sets a value indicating whether
            [print export documents].

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "own_customs_number": 'ownCustomsNumber',
        "is_intra_stat_active": 'isIntraStatActive',
        "intra_stat_from": 'intraStatFrom',
        "intra_stat_till": 'intraStatTill',
        "tax_number": 'taxNumber',
        "distinction_no": 'distinctionNo',
        "business_type": 'businessType',
        "process_type": 'processType',
        "process_type_national": 'processTypeNational',
        "print_export_documents": 'printExportDocuments'
    }

    _optionals = [
        'own_customs_number',
        'is_intra_stat_active',
        'intra_stat_from',
        'intra_stat_till',
        'tax_number',
        'distinction_no',
        'business_type',
        'process_type',
        'process_type_national',
        'print_export_documents',
    ]

    def __init__(self,
                 own_customs_number=APIHelper.SKIP,
                 is_intra_stat_active=APIHelper.SKIP,
                 intra_stat_from=APIHelper.SKIP,
                 intra_stat_till=APIHelper.SKIP,
                 tax_number=APIHelper.SKIP,
                 distinction_no=APIHelper.SKIP,
                 business_type=APIHelper.SKIP,
                 process_type=APIHelper.SKIP,
                 process_type_national=APIHelper.SKIP,
                 print_export_documents=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerCustomsScope class"""

        # Initialize members of the class
        if own_customs_number is not APIHelper.SKIP:
            self.own_customs_number = own_customs_number 
        if is_intra_stat_active is not APIHelper.SKIP:
            self.is_intra_stat_active = is_intra_stat_active 
        if intra_stat_from is not APIHelper.SKIP:
            self.intra_stat_from = APIHelper.RFC3339DateTime(intra_stat_from) if intra_stat_from else None 
        if intra_stat_till is not APIHelper.SKIP:
            self.intra_stat_till = APIHelper.RFC3339DateTime(intra_stat_till) if intra_stat_till else None 
        if tax_number is not APIHelper.SKIP:
            self.tax_number = tax_number 
        if distinction_no is not APIHelper.SKIP:
            self.distinction_no = distinction_no 
        if business_type is not APIHelper.SKIP:
            self.business_type = business_type 
        if process_type is not APIHelper.SKIP:
            self.process_type = process_type 
        if process_type_national is not APIHelper.SKIP:
            self.process_type_national = process_type_national 
        if print_export_documents is not APIHelper.SKIP:
            self.print_export_documents = print_export_documents 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        own_customs_number = dictionary.get("ownCustomsNumber") if dictionary.get("ownCustomsNumber") else APIHelper.SKIP
        is_intra_stat_active = dictionary.get("isIntraStatActive") if "isIntraStatActive" in dictionary.keys() else APIHelper.SKIP
        intra_stat_from = APIHelper.RFC3339DateTime.from_value(dictionary.get("intraStatFrom")).datetime if dictionary.get("intraStatFrom") else APIHelper.SKIP
        intra_stat_till = APIHelper.RFC3339DateTime.from_value(dictionary.get("intraStatTill")).datetime if dictionary.get("intraStatTill") else APIHelper.SKIP
        tax_number = dictionary.get("taxNumber") if dictionary.get("taxNumber") else APIHelper.SKIP
        distinction_no = dictionary.get("distinctionNo") if dictionary.get("distinctionNo") else APIHelper.SKIP
        business_type = dictionary.get("businessType") if dictionary.get("businessType") else APIHelper.SKIP
        process_type = dictionary.get("processType") if dictionary.get("processType") else APIHelper.SKIP
        process_type_national = dictionary.get("processTypeNational") if dictionary.get("processTypeNational") else APIHelper.SKIP
        print_export_documents = dictionary.get("printExportDocuments") if "printExportDocuments" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(own_customs_number,
                   is_intra_stat_active,
                   intra_stat_from,
                   intra_stat_till,
                   tax_number,
                   distinction_no,
                   business_type,
                   process_type,
                   process_type_national,
                   print_export_documents)
