# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerIdentificationScope(object):

    """Implementation of the 'LISPublicCustomerIdentificationScope' model.

    The LISCustomerIdentificationScope data contract.

    Attributes:
        shipowner_code (string): Gets or sets the shipowner code.
        customer_code (string): Gets or sets the customer code.
        transshipment_code (string): Gets or sets the transshipment code.
        broker_code (string): Gets or sets the broker code.
        carrier_code (string): Gets or sets the carrier code.
        warehouse_code (string): Gets or sets the warehouse code.
        un_code_1 (string): Gets or sets the un code1.
        un_code_2 (string): Gets or sets the un code2.
        dakosy_code (string): Gets or sets the dakosy code.
        bht_code (string): Gets or sets the BHT code.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "shipowner_code": 'shipownerCode',
        "customer_code": 'customerCode',
        "transshipment_code": 'transshipmentCode',
        "broker_code": 'brokerCode',
        "carrier_code": 'carrierCode',
        "warehouse_code": 'warehouseCode',
        "un_code_1": 'unCode1',
        "un_code_2": 'unCode2',
        "dakosy_code": 'dakosyCode',
        "bht_code": 'bhtCode'
    }

    _optionals = [
        'shipowner_code',
        'customer_code',
        'transshipment_code',
        'broker_code',
        'carrier_code',
        'warehouse_code',
        'un_code_1',
        'un_code_2',
        'dakosy_code',
        'bht_code',
    ]

    def __init__(self,
                 shipowner_code=APIHelper.SKIP,
                 customer_code=APIHelper.SKIP,
                 transshipment_code=APIHelper.SKIP,
                 broker_code=APIHelper.SKIP,
                 carrier_code=APIHelper.SKIP,
                 warehouse_code=APIHelper.SKIP,
                 un_code_1=APIHelper.SKIP,
                 un_code_2=APIHelper.SKIP,
                 dakosy_code=APIHelper.SKIP,
                 bht_code=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerIdentificationScope class"""

        # Initialize members of the class
        if shipowner_code is not APIHelper.SKIP:
            self.shipowner_code = shipowner_code 
        if customer_code is not APIHelper.SKIP:
            self.customer_code = customer_code 
        if transshipment_code is not APIHelper.SKIP:
            self.transshipment_code = transshipment_code 
        if broker_code is not APIHelper.SKIP:
            self.broker_code = broker_code 
        if carrier_code is not APIHelper.SKIP:
            self.carrier_code = carrier_code 
        if warehouse_code is not APIHelper.SKIP:
            self.warehouse_code = warehouse_code 
        if un_code_1 is not APIHelper.SKIP:
            self.un_code_1 = un_code_1 
        if un_code_2 is not APIHelper.SKIP:
            self.un_code_2 = un_code_2 
        if dakosy_code is not APIHelper.SKIP:
            self.dakosy_code = dakosy_code 
        if bht_code is not APIHelper.SKIP:
            self.bht_code = bht_code 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        shipowner_code = dictionary.get("shipownerCode") if dictionary.get("shipownerCode") else APIHelper.SKIP
        customer_code = dictionary.get("customerCode") if dictionary.get("customerCode") else APIHelper.SKIP
        transshipment_code = dictionary.get("transshipmentCode") if dictionary.get("transshipmentCode") else APIHelper.SKIP
        broker_code = dictionary.get("brokerCode") if dictionary.get("brokerCode") else APIHelper.SKIP
        carrier_code = dictionary.get("carrierCode") if dictionary.get("carrierCode") else APIHelper.SKIP
        warehouse_code = dictionary.get("warehouseCode") if dictionary.get("warehouseCode") else APIHelper.SKIP
        un_code_1 = dictionary.get("unCode1") if dictionary.get("unCode1") else APIHelper.SKIP
        un_code_2 = dictionary.get("unCode2") if dictionary.get("unCode2") else APIHelper.SKIP
        dakosy_code = dictionary.get("dakosyCode") if dictionary.get("dakosyCode") else APIHelper.SKIP
        bht_code = dictionary.get("bhtCode") if dictionary.get("bhtCode") else APIHelper.SKIP
        # Return an object of this model
        return cls(shipowner_code,
                   customer_code,
                   transshipment_code,
                   broker_code,
                   carrier_code,
                   warehouse_code,
                   un_code_1,
                   un_code_2,
                   dakosy_code,
                   bht_code)
