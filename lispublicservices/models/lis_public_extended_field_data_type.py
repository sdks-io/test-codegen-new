# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicExtendedFieldDataType(object):

    """Implementation of the 'LISPublicExtendedFieldDataType' model.

    This class describes the data type of a extended table column.

    Attributes:
        lis_data_type (LisDataTypeEnum): Gets or sets the LIS data type of
            this instance represents.
        data_type (string): Gets or sets the CLR type that this instance
            represents.
        max_length (int): Gets or sets the max length of the field value.
        digits (int): Gets or sets the digits of the field value if field type
            is numeric. otherwise 0.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "lis_data_type": 'lisDataType',
        "data_type": 'dataType',
        "max_length": 'maxLength',
        "digits": 'digits'
    }

    _optionals = [
        'lis_data_type',
        'data_type',
        'max_length',
        'digits',
    ]

    def __init__(self,
                 lis_data_type=APIHelper.SKIP,
                 data_type=APIHelper.SKIP,
                 max_length=APIHelper.SKIP,
                 digits=APIHelper.SKIP):
        """Constructor for the LISPublicExtendedFieldDataType class"""

        # Initialize members of the class
        if lis_data_type is not APIHelper.SKIP:
            self.lis_data_type = lis_data_type 
        if data_type is not APIHelper.SKIP:
            self.data_type = data_type 
        if max_length is not APIHelper.SKIP:
            self.max_length = max_length 
        if digits is not APIHelper.SKIP:
            self.digits = digits 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        lis_data_type = dictionary.get("lisDataType") if dictionary.get("lisDataType") else APIHelper.SKIP
        data_type = dictionary.get("dataType") if dictionary.get("dataType") else APIHelper.SKIP
        max_length = dictionary.get("maxLength") if dictionary.get("maxLength") else APIHelper.SKIP
        digits = dictionary.get("digits") if dictionary.get("digits") else APIHelper.SKIP
        # Return an object of this model
        return cls(lis_data_type,
                   data_type,
                   max_length,
                   digits)
