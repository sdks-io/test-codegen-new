# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerHazardousGoodsClass(object):

    """Implementation of the 'LISPublicCustomerHazardousGoodsClass' model.

    The LISCustomerHazardousGoodsClass data contract.

    Attributes:
        customer_hazardous_goods_class_id (int): Gets or sets
            CustomerHazardousGoodsClassId.
        customer_id (int): Gets or sets CustomerId.
        hazardous_goods_class (string): Gets or sets HazardousGoodsClass.
        blocked (bool): Gets or sets Blocked.
        track_changes (bool): Gets or sets TrackChanges.
        has_changes (bool): Gets or sets HasChanges.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "customer_hazardous_goods_class_id": 'customerHazardousGoodsClassId',
        "customer_id": 'customerId',
        "hazardous_goods_class": 'hazardousGoodsClass',
        "blocked": 'blocked',
        "track_changes": 'trackChanges',
        "has_changes": 'hasChanges'
    }

    _optionals = [
        'customer_hazardous_goods_class_id',
        'customer_id',
        'hazardous_goods_class',
        'blocked',
        'track_changes',
        'has_changes',
    ]

    def __init__(self,
                 customer_hazardous_goods_class_id=APIHelper.SKIP,
                 customer_id=APIHelper.SKIP,
                 hazardous_goods_class=APIHelper.SKIP,
                 blocked=APIHelper.SKIP,
                 track_changes=APIHelper.SKIP,
                 has_changes=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerHazardousGoodsClass class"""

        # Initialize members of the class
        if customer_hazardous_goods_class_id is not APIHelper.SKIP:
            self.customer_hazardous_goods_class_id = customer_hazardous_goods_class_id 
        if customer_id is not APIHelper.SKIP:
            self.customer_id = customer_id 
        if hazardous_goods_class is not APIHelper.SKIP:
            self.hazardous_goods_class = hazardous_goods_class 
        if blocked is not APIHelper.SKIP:
            self.blocked = blocked 
        if track_changes is not APIHelper.SKIP:
            self.track_changes = track_changes 
        if has_changes is not APIHelper.SKIP:
            self.has_changes = has_changes 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        customer_hazardous_goods_class_id = dictionary.get("customerHazardousGoodsClassId") if dictionary.get("customerHazardousGoodsClassId") else APIHelper.SKIP
        customer_id = dictionary.get("customerId") if dictionary.get("customerId") else APIHelper.SKIP
        hazardous_goods_class = dictionary.get("hazardousGoodsClass") if dictionary.get("hazardousGoodsClass") else APIHelper.SKIP
        blocked = dictionary.get("blocked") if "blocked" in dictionary.keys() else APIHelper.SKIP
        track_changes = dictionary.get("trackChanges") if "trackChanges" in dictionary.keys() else APIHelper.SKIP
        has_changes = dictionary.get("hasChanges") if "hasChanges" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(customer_hazardous_goods_class_id,
                   customer_id,
                   hazardous_goods_class,
                   blocked,
                   track_changes,
                   has_changes)
