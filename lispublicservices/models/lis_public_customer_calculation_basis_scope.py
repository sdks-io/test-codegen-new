# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper
from lispublicservices.models.lis_public_customer_commission_calculation import LISPublicCustomerCommissionCalculation


class LISPublicCustomerCalculationBasisScope(object):

    """Implementation of the 'LISPublicCustomerCalculationBasisScope' model.

    The LISCustomerCalculationBasisScope data contract.

    Attributes:
        reference_number_mask (string): Gets or sets ReferenceNumberMask.
        reference_number_mask_counter (int): Gets or sets
            ReferenceNumberMaskCounter.
        sscc_base_no (string): Gets or sets the SSCC base no.
        producer_no (string): Gets or sets the producer no.
        disposal_company_no (string): Gets or sets the disposal company no.
        disposal_company_transport_no (string): Gets or sets the disposal
            company transport no.
        disposal_transport_permission (string): Gets or sets the disposal
            transport permission.
        disposal_transport_permission_valid_till (datetime): Gets or sets the
            disposal transport permission valid till.
        commission_calculations (list of
            LISPublicCustomerCommissionCalculation): Gets or sets the
            commission calculations.
        join_split_setting_id (int): Gets or sets the join split setting
            identifier.
        uic_country_code (int): Gets or sets UICCountryCode.
        uic_no (int): Gets or sets UICNo.
        uirr_no (int): Gets or sets UIRRNo.
        is_protected (bool): Gets or sets the is protected.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "reference_number_mask": 'referenceNumberMask',
        "reference_number_mask_counter": 'referenceNumberMaskCounter',
        "sscc_base_no": 'ssccBaseNo',
        "producer_no": 'producerNo',
        "disposal_company_no": 'disposalCompanyNo',
        "disposal_company_transport_no": 'disposalCompanyTransportNo',
        "disposal_transport_permission": 'disposalTransportPermission',
        "disposal_transport_permission_valid_till": 'disposalTransportPermissionValidTill',
        "commission_calculations": 'commissionCalculations',
        "join_split_setting_id": 'joinSplitSettingId',
        "uic_country_code": 'uicCountryCode',
        "uic_no": 'uicNo',
        "uirr_no": 'uirrNo',
        "is_protected": 'isProtected'
    }

    _optionals = [
        'reference_number_mask',
        'reference_number_mask_counter',
        'sscc_base_no',
        'producer_no',
        'disposal_company_no',
        'disposal_company_transport_no',
        'disposal_transport_permission',
        'disposal_transport_permission_valid_till',
        'commission_calculations',
        'join_split_setting_id',
        'uic_country_code',
        'uic_no',
        'uirr_no',
        'is_protected',
    ]

    def __init__(self,
                 reference_number_mask=APIHelper.SKIP,
                 reference_number_mask_counter=APIHelper.SKIP,
                 sscc_base_no=APIHelper.SKIP,
                 producer_no=APIHelper.SKIP,
                 disposal_company_no=APIHelper.SKIP,
                 disposal_company_transport_no=APIHelper.SKIP,
                 disposal_transport_permission=APIHelper.SKIP,
                 disposal_transport_permission_valid_till=APIHelper.SKIP,
                 commission_calculations=APIHelper.SKIP,
                 join_split_setting_id=APIHelper.SKIP,
                 uic_country_code=APIHelper.SKIP,
                 uic_no=APIHelper.SKIP,
                 uirr_no=APIHelper.SKIP,
                 is_protected=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerCalculationBasisScope class"""

        # Initialize members of the class
        if reference_number_mask is not APIHelper.SKIP:
            self.reference_number_mask = reference_number_mask 
        if reference_number_mask_counter is not APIHelper.SKIP:
            self.reference_number_mask_counter = reference_number_mask_counter 
        if sscc_base_no is not APIHelper.SKIP:
            self.sscc_base_no = sscc_base_no 
        if producer_no is not APIHelper.SKIP:
            self.producer_no = producer_no 
        if disposal_company_no is not APIHelper.SKIP:
            self.disposal_company_no = disposal_company_no 
        if disposal_company_transport_no is not APIHelper.SKIP:
            self.disposal_company_transport_no = disposal_company_transport_no 
        if disposal_transport_permission is not APIHelper.SKIP:
            self.disposal_transport_permission = disposal_transport_permission 
        if disposal_transport_permission_valid_till is not APIHelper.SKIP:
            self.disposal_transport_permission_valid_till = APIHelper.RFC3339DateTime(disposal_transport_permission_valid_till) if disposal_transport_permission_valid_till else None 
        if commission_calculations is not APIHelper.SKIP:
            self.commission_calculations = commission_calculations 
        if join_split_setting_id is not APIHelper.SKIP:
            self.join_split_setting_id = join_split_setting_id 
        if uic_country_code is not APIHelper.SKIP:
            self.uic_country_code = uic_country_code 
        if uic_no is not APIHelper.SKIP:
            self.uic_no = uic_no 
        if uirr_no is not APIHelper.SKIP:
            self.uirr_no = uirr_no 
        if is_protected is not APIHelper.SKIP:
            self.is_protected = is_protected 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        reference_number_mask = dictionary.get("referenceNumberMask") if dictionary.get("referenceNumberMask") else APIHelper.SKIP
        reference_number_mask_counter = dictionary.get("referenceNumberMaskCounter") if dictionary.get("referenceNumberMaskCounter") else APIHelper.SKIP
        sscc_base_no = dictionary.get("ssccBaseNo") if dictionary.get("ssccBaseNo") else APIHelper.SKIP
        producer_no = dictionary.get("producerNo") if dictionary.get("producerNo") else APIHelper.SKIP
        disposal_company_no = dictionary.get("disposalCompanyNo") if dictionary.get("disposalCompanyNo") else APIHelper.SKIP
        disposal_company_transport_no = dictionary.get("disposalCompanyTransportNo") if dictionary.get("disposalCompanyTransportNo") else APIHelper.SKIP
        disposal_transport_permission = dictionary.get("disposalTransportPermission") if dictionary.get("disposalTransportPermission") else APIHelper.SKIP
        disposal_transport_permission_valid_till = APIHelper.RFC3339DateTime.from_value(dictionary.get("disposalTransportPermissionValidTill")).datetime if dictionary.get("disposalTransportPermissionValidTill") else APIHelper.SKIP
        commission_calculations = None
        if dictionary.get('commissionCalculations') is not None:
            commission_calculations = [LISPublicCustomerCommissionCalculation.from_dictionary(x) for x in dictionary.get('commissionCalculations')]
        else:
            commission_calculations = APIHelper.SKIP
        join_split_setting_id = dictionary.get("joinSplitSettingId") if dictionary.get("joinSplitSettingId") else APIHelper.SKIP
        uic_country_code = dictionary.get("uicCountryCode") if dictionary.get("uicCountryCode") else APIHelper.SKIP
        uic_no = dictionary.get("uicNo") if dictionary.get("uicNo") else APIHelper.SKIP
        uirr_no = dictionary.get("uirrNo") if dictionary.get("uirrNo") else APIHelper.SKIP
        is_protected = dictionary.get("isProtected") if "isProtected" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(reference_number_mask,
                   reference_number_mask_counter,
                   sscc_base_no,
                   producer_no,
                   disposal_company_no,
                   disposal_company_transport_no,
                   disposal_transport_permission,
                   disposal_transport_permission_valid_till,
                   commission_calculations,
                   join_split_setting_id,
                   uic_country_code,
                   uic_no,
                   uirr_no,
                   is_protected)
