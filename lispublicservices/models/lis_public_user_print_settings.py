# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicUserPrintSettings(object):

    """Implementation of the 'LISPublicUserPrintSettings' model.

    LISPrintCommandOverrids

    Attributes:
        dms_attach_docs (int): TODO: type description here.
        skip_dms_docs_merge (bool): TODO: type description here.
        skip_send_mail (bool): TODO: type description here.
        skip_post_actions (bool): TODO: type description here.
        print_original_document (bool): TODO: type description here.
        preview_only (bool): TODO: type description here.
        skip_preview (bool): TODO: type description here.
        printer_name (string): TODO: type description here.
        execute_post_actions (bool): TODO: type description here.
        skip_group_selection (bool): TODO: type description here.
        skip_print_original (bool): TODO: type description here.
        create_stream_only (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "dms_attach_docs": 'dmsAttachDocs',
        "skip_dms_docs_merge": 'skipDMSDocsMerge',
        "skip_send_mail": 'skipSendMail',
        "skip_post_actions": 'skipPostActions',
        "print_original_document": 'printOriginalDocument',
        "preview_only": 'previewOnly',
        "skip_preview": 'skipPreview',
        "printer_name": 'printerName',
        "execute_post_actions": 'executePostActions',
        "skip_group_selection": 'skipGroupSelection',
        "skip_print_original": 'skipPrintOriginal',
        "create_stream_only": 'createStreamOnly'
    }

    _optionals = [
        'dms_attach_docs',
        'skip_dms_docs_merge',
        'skip_send_mail',
        'skip_post_actions',
        'print_original_document',
        'preview_only',
        'skip_preview',
        'printer_name',
        'execute_post_actions',
        'skip_group_selection',
        'skip_print_original',
        'create_stream_only',
    ]

    def __init__(self,
                 dms_attach_docs=APIHelper.SKIP,
                 skip_dms_docs_merge=APIHelper.SKIP,
                 skip_send_mail=APIHelper.SKIP,
                 skip_post_actions=APIHelper.SKIP,
                 print_original_document=APIHelper.SKIP,
                 preview_only=APIHelper.SKIP,
                 skip_preview=APIHelper.SKIP,
                 printer_name=APIHelper.SKIP,
                 execute_post_actions=APIHelper.SKIP,
                 skip_group_selection=APIHelper.SKIP,
                 skip_print_original=APIHelper.SKIP,
                 create_stream_only=APIHelper.SKIP):
        """Constructor for the LISPublicUserPrintSettings class"""

        # Initialize members of the class
        if dms_attach_docs is not APIHelper.SKIP:
            self.dms_attach_docs = dms_attach_docs 
        if skip_dms_docs_merge is not APIHelper.SKIP:
            self.skip_dms_docs_merge = skip_dms_docs_merge 
        if skip_send_mail is not APIHelper.SKIP:
            self.skip_send_mail = skip_send_mail 
        if skip_post_actions is not APIHelper.SKIP:
            self.skip_post_actions = skip_post_actions 
        if print_original_document is not APIHelper.SKIP:
            self.print_original_document = print_original_document 
        if preview_only is not APIHelper.SKIP:
            self.preview_only = preview_only 
        if skip_preview is not APIHelper.SKIP:
            self.skip_preview = skip_preview 
        if printer_name is not APIHelper.SKIP:
            self.printer_name = printer_name 
        if execute_post_actions is not APIHelper.SKIP:
            self.execute_post_actions = execute_post_actions 
        if skip_group_selection is not APIHelper.SKIP:
            self.skip_group_selection = skip_group_selection 
        if skip_print_original is not APIHelper.SKIP:
            self.skip_print_original = skip_print_original 
        if create_stream_only is not APIHelper.SKIP:
            self.create_stream_only = create_stream_only 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        dms_attach_docs = dictionary.get("dmsAttachDocs") if dictionary.get("dmsAttachDocs") else APIHelper.SKIP
        skip_dms_docs_merge = dictionary.get("skipDMSDocsMerge") if "skipDMSDocsMerge" in dictionary.keys() else APIHelper.SKIP
        skip_send_mail = dictionary.get("skipSendMail") if "skipSendMail" in dictionary.keys() else APIHelper.SKIP
        skip_post_actions = dictionary.get("skipPostActions") if "skipPostActions" in dictionary.keys() else APIHelper.SKIP
        print_original_document = dictionary.get("printOriginalDocument") if "printOriginalDocument" in dictionary.keys() else APIHelper.SKIP
        preview_only = dictionary.get("previewOnly") if "previewOnly" in dictionary.keys() else APIHelper.SKIP
        skip_preview = dictionary.get("skipPreview") if "skipPreview" in dictionary.keys() else APIHelper.SKIP
        printer_name = dictionary.get("printerName") if dictionary.get("printerName") else APIHelper.SKIP
        execute_post_actions = dictionary.get("executePostActions") if "executePostActions" in dictionary.keys() else APIHelper.SKIP
        skip_group_selection = dictionary.get("skipGroupSelection") if "skipGroupSelection" in dictionary.keys() else APIHelper.SKIP
        skip_print_original = dictionary.get("skipPrintOriginal") if "skipPrintOriginal" in dictionary.keys() else APIHelper.SKIP
        create_stream_only = dictionary.get("createStreamOnly") if "createStreamOnly" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(dms_attach_docs,
                   skip_dms_docs_merge,
                   skip_send_mail,
                   skip_post_actions,
                   print_original_document,
                   preview_only,
                   skip_preview,
                   printer_name,
                   execute_post_actions,
                   skip_group_selection,
                   skip_print_original,
                   create_stream_only)
