# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicLanguageItem(object):

    """Implementation of the 'LISPublicLanguageItem' model.

    TODO: type model description here.

    Attributes:
        language_item_id (int): Gets or sets the language item id.
        language_id (int): Gets or sets the language item id.
        culture_name (string): Gets or sets the culture.
        language_name (string): Gets or sets the name of the language.
        text (string): Gets or sets the text.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "language_item_id": 'languageItemId',
        "language_id": 'languageId',
        "culture_name": 'cultureName',
        "language_name": 'languageName',
        "text": 'text'
    }

    _optionals = [
        'language_item_id',
        'language_id',
        'culture_name',
        'language_name',
        'text',
    ]

    def __init__(self,
                 language_item_id=APIHelper.SKIP,
                 language_id=APIHelper.SKIP,
                 culture_name=APIHelper.SKIP,
                 language_name=APIHelper.SKIP,
                 text=APIHelper.SKIP):
        """Constructor for the LISPublicLanguageItem class"""

        # Initialize members of the class
        if language_item_id is not APIHelper.SKIP:
            self.language_item_id = language_item_id 
        if language_id is not APIHelper.SKIP:
            self.language_id = language_id 
        if culture_name is not APIHelper.SKIP:
            self.culture_name = culture_name 
        if language_name is not APIHelper.SKIP:
            self.language_name = language_name 
        if text is not APIHelper.SKIP:
            self.text = text 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        language_item_id = dictionary.get("languageItemId") if dictionary.get("languageItemId") else APIHelper.SKIP
        language_id = dictionary.get("languageId") if dictionary.get("languageId") else APIHelper.SKIP
        culture_name = dictionary.get("cultureName") if dictionary.get("cultureName") else APIHelper.SKIP
        language_name = dictionary.get("languageName") if dictionary.get("languageName") else APIHelper.SKIP
        text = dictionary.get("text") if dictionary.get("text") else APIHelper.SKIP
        # Return an object of this model
        return cls(language_item_id,
                   language_id,
                   culture_name,
                   language_name,
                   text)
