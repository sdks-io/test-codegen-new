# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper
from lispublicservices.models.lis_public_address import LISPublicAddress
from lispublicservices.models.lis_public_customer_address import LISPublicCustomerAddress
from lispublicservices.models.lis_public_operation_hours import LISPublicOperationHours


class LISPublicShipmentStation(object):

    """Implementation of the 'LISPublicShipmentStation' model.

    The shipment station.

    Attributes:
        station_type (StationTypeEnum): Gets or sets the type of the station.
        operation_hours (list of LISPublicOperationHours): Gets or sets the
            operation hours.
        shipment_address (LISPublicAddress): This class represents the public
            address object.
        locality_id (int): Gets or sets the locality id.
        country_code (string): Gets or sets the country code.
        customer_id (int): Gets or sets the customer id.
        created_by (string): Gets or sets the date the item was created.
        created_on (datetime): Gets or sets the name of the user that created
            this item.
        changed_by (string): Gets or sets the name of the user that made the
            last change to this item.
        changed_on (datetime): Gets or sets the date of the last change to
            this item.
        customer_short (string): Gets or sets the customer short.
        name_1 (string): Gets or sets the name1.
        name_2 (string): Gets or sets the name2.
        name_3 (string): Gets or sets the name3.
        customer_type (CustomerTypeEnum): Gets or sets the type of the
            customer.
        address (LISPublicCustomerAddress): Represents a customer address.
        extended_address_id (string): Gets or sets the extended address id.
        blocked_from_date (datetime): Gets or sets the blocked from date.
        mdm_debit_state (MdmDebitStateEnum): Gets or sets the state of the MDM
            debit.
        mdm_credit_state (MdmCreditStateEnum): Gets or sets the state of the
            MDM credit.
        is_new (bool): Gets or sets a value indicating whether this entity
            will be inserted or updated.
        original_hash_snapshot (string): Gets or sets the original hash
            snapshot.
        original_snapshot (string): Gets or sets the original snapshot.
        current_snapshot (string): Gets or sets the current snapshot.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "station_type": 'stationType',
        "operation_hours": 'operationHours',
        "shipment_address": 'shipmentAddress',
        "locality_id": 'localityId',
        "country_code": 'countryCode',
        "customer_id": 'customerId',
        "created_by": 'createdBy',
        "created_on": 'createdOn',
        "changed_by": 'changedBy',
        "changed_on": 'changedOn',
        "customer_short": 'customerShort',
        "name_1": 'name1',
        "name_2": 'name2',
        "name_3": 'name3',
        "customer_type": 'customerType',
        "address": 'address',
        "extended_address_id": 'extendedAddressId',
        "blocked_from_date": 'blockedFromDate',
        "mdm_debit_state": 'mdmDebitState',
        "mdm_credit_state": 'mdmCreditState',
        "is_new": 'isNew',
        "original_hash_snapshot": 'originalHashSnapshot',
        "original_snapshot": 'originalSnapshot',
        "current_snapshot": 'currentSnapshot'
    }

    _optionals = [
        'station_type',
        'operation_hours',
        'shipment_address',
        'locality_id',
        'country_code',
        'customer_id',
        'created_by',
        'created_on',
        'changed_by',
        'changed_on',
        'customer_short',
        'name_1',
        'name_2',
        'name_3',
        'customer_type',
        'address',
        'extended_address_id',
        'blocked_from_date',
        'mdm_debit_state',
        'mdm_credit_state',
        'is_new',
        'original_hash_snapshot',
        'original_snapshot',
        'current_snapshot',
    ]

    def __init__(self,
                 station_type=APIHelper.SKIP,
                 operation_hours=APIHelper.SKIP,
                 shipment_address=APIHelper.SKIP,
                 locality_id=APIHelper.SKIP,
                 country_code=APIHelper.SKIP,
                 customer_id=APIHelper.SKIP,
                 created_by=APIHelper.SKIP,
                 created_on=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP,
                 customer_short=APIHelper.SKIP,
                 name_1=APIHelper.SKIP,
                 name_2=APIHelper.SKIP,
                 name_3=APIHelper.SKIP,
                 customer_type=APIHelper.SKIP,
                 address=APIHelper.SKIP,
                 extended_address_id=APIHelper.SKIP,
                 blocked_from_date=APIHelper.SKIP,
                 mdm_debit_state=APIHelper.SKIP,
                 mdm_credit_state=APIHelper.SKIP,
                 is_new=APIHelper.SKIP,
                 original_hash_snapshot=APIHelper.SKIP,
                 original_snapshot=APIHelper.SKIP,
                 current_snapshot=APIHelper.SKIP):
        """Constructor for the LISPublicShipmentStation class"""

        # Initialize members of the class
        if station_type is not APIHelper.SKIP:
            self.station_type = station_type 
        if operation_hours is not APIHelper.SKIP:
            self.operation_hours = operation_hours 
        if shipment_address is not APIHelper.SKIP:
            self.shipment_address = shipment_address 
        if locality_id is not APIHelper.SKIP:
            self.locality_id = locality_id 
        if country_code is not APIHelper.SKIP:
            self.country_code = country_code 
        if customer_id is not APIHelper.SKIP:
            self.customer_id = customer_id 
        if created_by is not APIHelper.SKIP:
            self.created_by = created_by 
        if created_on is not APIHelper.SKIP:
            self.created_on = APIHelper.RFC3339DateTime(created_on) if created_on else None 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 
        if customer_short is not APIHelper.SKIP:
            self.customer_short = customer_short 
        if name_1 is not APIHelper.SKIP:
            self.name_1 = name_1 
        if name_2 is not APIHelper.SKIP:
            self.name_2 = name_2 
        if name_3 is not APIHelper.SKIP:
            self.name_3 = name_3 
        if customer_type is not APIHelper.SKIP:
            self.customer_type = customer_type 
        if address is not APIHelper.SKIP:
            self.address = address 
        if extended_address_id is not APIHelper.SKIP:
            self.extended_address_id = extended_address_id 
        if blocked_from_date is not APIHelper.SKIP:
            self.blocked_from_date = APIHelper.RFC3339DateTime(blocked_from_date) if blocked_from_date else None 
        if mdm_debit_state is not APIHelper.SKIP:
            self.mdm_debit_state = mdm_debit_state 
        if mdm_credit_state is not APIHelper.SKIP:
            self.mdm_credit_state = mdm_credit_state 
        if is_new is not APIHelper.SKIP:
            self.is_new = is_new 
        if original_hash_snapshot is not APIHelper.SKIP:
            self.original_hash_snapshot = original_hash_snapshot 
        if original_snapshot is not APIHelper.SKIP:
            self.original_snapshot = original_snapshot 
        if current_snapshot is not APIHelper.SKIP:
            self.current_snapshot = current_snapshot 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        station_type = dictionary.get("stationType") if dictionary.get("stationType") else APIHelper.SKIP
        operation_hours = None
        if dictionary.get('operationHours') is not None:
            operation_hours = [LISPublicOperationHours.from_dictionary(x) for x in dictionary.get('operationHours')]
        else:
            operation_hours = APIHelper.SKIP
        shipment_address = LISPublicAddress.from_dictionary(dictionary.get('shipmentAddress')) if 'shipmentAddress' in dictionary.keys() else APIHelper.SKIP
        locality_id = dictionary.get("localityId") if dictionary.get("localityId") else APIHelper.SKIP
        country_code = dictionary.get("countryCode") if dictionary.get("countryCode") else APIHelper.SKIP
        customer_id = dictionary.get("customerId") if dictionary.get("customerId") else APIHelper.SKIP
        created_by = dictionary.get("createdBy") if dictionary.get("createdBy") else APIHelper.SKIP
        created_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdOn")).datetime if dictionary.get("createdOn") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        customer_short = dictionary.get("customerShort") if dictionary.get("customerShort") else APIHelper.SKIP
        name_1 = dictionary.get("name1") if dictionary.get("name1") else APIHelper.SKIP
        name_2 = dictionary.get("name2") if dictionary.get("name2") else APIHelper.SKIP
        name_3 = dictionary.get("name3") if dictionary.get("name3") else APIHelper.SKIP
        customer_type = dictionary.get("customerType") if dictionary.get("customerType") else APIHelper.SKIP
        address = LISPublicCustomerAddress.from_dictionary(dictionary.get('address')) if 'address' in dictionary.keys() else APIHelper.SKIP
        extended_address_id = dictionary.get("extendedAddressId") if dictionary.get("extendedAddressId") else APIHelper.SKIP
        blocked_from_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("blockedFromDate")).datetime if dictionary.get("blockedFromDate") else APIHelper.SKIP
        mdm_debit_state = dictionary.get("mdmDebitState") if dictionary.get("mdmDebitState") else APIHelper.SKIP
        mdm_credit_state = dictionary.get("mdmCreditState") if dictionary.get("mdmCreditState") else APIHelper.SKIP
        is_new = dictionary.get("isNew") if "isNew" in dictionary.keys() else APIHelper.SKIP
        original_hash_snapshot = dictionary.get("originalHashSnapshot") if dictionary.get("originalHashSnapshot") else APIHelper.SKIP
        original_snapshot = dictionary.get("originalSnapshot") if dictionary.get("originalSnapshot") else APIHelper.SKIP
        current_snapshot = dictionary.get("currentSnapshot") if dictionary.get("currentSnapshot") else APIHelper.SKIP
        # Return an object of this model
        return cls(station_type,
                   operation_hours,
                   shipment_address,
                   locality_id,
                   country_code,
                   customer_id,
                   created_by,
                   created_on,
                   changed_by,
                   changed_on,
                   customer_short,
                   name_1,
                   name_2,
                   name_3,
                   customer_type,
                   address,
                   extended_address_id,
                   blocked_from_date,
                   mdm_debit_state,
                   mdm_credit_state,
                   is_new,
                   original_hash_snapshot,
                   original_snapshot,
                   current_snapshot)
