# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicOrderFee(object):

    """Implementation of the 'LISPublicOrderFee' model.

    The LISOrderFee data contract.

    Attributes:
        order_id (int): Gets or sets OrderId.
        sequential_no (int): Gets or sets SequentialNo.
        changed_on (datetime): Gets or sets ChangedOn.
        changed_by (string): Gets or sets ChangedBy.
        fieldname (string): Gets or sets Fieldname.
        basis (BasisEnum): Gets or sets Basis.
        value (float): Gets or sets Value.
        currency_id (string): Gets or sets CurrencyId.
        sales_tax_id (string): Gets or sets SalesTaxId.
        charge_id (int): Gets or sets ChargeId.
        text (string): Gets or sets Text.
        amount (float): Gets or sets Amount.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "order_id": 'orderId',
        "sequential_no": 'sequentialNo',
        "changed_on": 'changedOn',
        "changed_by": 'changedBy',
        "fieldname": 'fieldname',
        "basis": 'basis',
        "value": 'value',
        "currency_id": 'currencyId',
        "sales_tax_id": 'salesTaxId',
        "charge_id": 'chargeId',
        "text": 'text',
        "amount": 'amount'
    }

    _optionals = [
        'order_id',
        'sequential_no',
        'changed_on',
        'changed_by',
        'fieldname',
        'basis',
        'value',
        'currency_id',
        'sales_tax_id',
        'charge_id',
        'text',
        'amount',
    ]

    def __init__(self,
                 order_id=APIHelper.SKIP,
                 sequential_no=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP,
                 fieldname=APIHelper.SKIP,
                 basis=APIHelper.SKIP,
                 value=APIHelper.SKIP,
                 currency_id=APIHelper.SKIP,
                 sales_tax_id=APIHelper.SKIP,
                 charge_id=APIHelper.SKIP,
                 text=APIHelper.SKIP,
                 amount=APIHelper.SKIP):
        """Constructor for the LISPublicOrderFee class"""

        # Initialize members of the class
        if order_id is not APIHelper.SKIP:
            self.order_id = order_id 
        if sequential_no is not APIHelper.SKIP:
            self.sequential_no = sequential_no 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 
        if fieldname is not APIHelper.SKIP:
            self.fieldname = fieldname 
        if basis is not APIHelper.SKIP:
            self.basis = basis 
        if value is not APIHelper.SKIP:
            self.value = value 
        if currency_id is not APIHelper.SKIP:
            self.currency_id = currency_id 
        if sales_tax_id is not APIHelper.SKIP:
            self.sales_tax_id = sales_tax_id 
        if charge_id is not APIHelper.SKIP:
            self.charge_id = charge_id 
        if text is not APIHelper.SKIP:
            self.text = text 
        if amount is not APIHelper.SKIP:
            self.amount = amount 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        order_id = dictionary.get("orderId") if dictionary.get("orderId") else APIHelper.SKIP
        sequential_no = dictionary.get("sequentialNo") if dictionary.get("sequentialNo") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        fieldname = dictionary.get("fieldname") if dictionary.get("fieldname") else APIHelper.SKIP
        basis = dictionary.get("basis") if dictionary.get("basis") else APIHelper.SKIP
        value = dictionary.get("value") if dictionary.get("value") else APIHelper.SKIP
        currency_id = dictionary.get("currencyId") if dictionary.get("currencyId") else APIHelper.SKIP
        sales_tax_id = dictionary.get("salesTaxId") if dictionary.get("salesTaxId") else APIHelper.SKIP
        charge_id = dictionary.get("chargeId") if dictionary.get("chargeId") else APIHelper.SKIP
        text = dictionary.get("text") if dictionary.get("text") else APIHelper.SKIP
        amount = dictionary.get("amount") if dictionary.get("amount") else APIHelper.SKIP
        # Return an object of this model
        return cls(order_id,
                   sequential_no,
                   changed_on,
                   changed_by,
                   fieldname,
                   basis,
                   value,
                   currency_id,
                   sales_tax_id,
                   charge_id,
                   text,
                   amount)
