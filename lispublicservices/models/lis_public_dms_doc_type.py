# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper
from lispublicservices.models.lis_public_dms_doc_type_key_item import LISPublicDMSDocTypeKeyItem


class LISPublicDMSDocType(object):

    """Implementation of the 'LISPublicDMSDocType' model.

    Customer address data of accounts

    Attributes:
        dms_doc_type_id (int): Gets or sets the DMS doc type id.
        doc_type_name (string): Gets or sets the name of the doc type.
        send_mails_only_to_contact_persons (bool): Gets or sets a value
            indicating whether [send mails only to contact persons].
        status_id (int): Gets or sets the status identifier.
        doc_type_key_items (list of LISPublicDMSDocTypeKeyItem): Gets or sets
            the doc type key items.
        auf_nr_search (bool): Gets or sets a value indicating whether [auf nr
            search].
        no_db_archiv (bool): Gets or sets a value indicating whether [no
            database archiv].
        keep_while_delete_company_data (bool): Gets or sets a value indicating
            whether [keep while delete company data].
        no_doc_to_pdf (bool): Gets or sets a value indicating whether [no
            document to PDF].
        mandatory_type (MandatoryTypeEnum): Gets or sets a value indicating
            whether [mandatory document].
        related_folder_id (int): Gets or sets the related folder identifier.
        related_archive_id (int): Gets or sets the related archive
            identifier.
        created_by (string): Gets or sets the date the item was created.
        created_on (datetime): Gets or sets the name of the user that created
            this item.
        changed_by (string): Gets or sets the name of the user that made the
            last change to this item.
        changed_on (datetime): Gets or sets the date of the last change to
            this item.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "dms_doc_type_id": 'dmsDocTypeId',
        "doc_type_name": 'docTypeName',
        "send_mails_only_to_contact_persons": 'sendMailsOnlyToContactPersons',
        "status_id": 'statusId',
        "doc_type_key_items": 'docTypeKeyItems',
        "auf_nr_search": 'aufNrSearch',
        "no_db_archiv": 'noDBArchiv',
        "keep_while_delete_company_data": 'keepWhileDeleteCompanyData',
        "no_doc_to_pdf": 'noDocToPDF',
        "mandatory_type": 'mandatoryType',
        "related_folder_id": 'relatedFolderId',
        "related_archive_id": 'relatedArchiveId',
        "created_by": 'createdBy',
        "created_on": 'createdOn',
        "changed_by": 'changedBy',
        "changed_on": 'changedOn'
    }

    _optionals = [
        'dms_doc_type_id',
        'doc_type_name',
        'send_mails_only_to_contact_persons',
        'status_id',
        'doc_type_key_items',
        'auf_nr_search',
        'no_db_archiv',
        'keep_while_delete_company_data',
        'no_doc_to_pdf',
        'mandatory_type',
        'related_folder_id',
        'related_archive_id',
        'created_by',
        'created_on',
        'changed_by',
        'changed_on',
    ]

    def __init__(self,
                 dms_doc_type_id=APIHelper.SKIP,
                 doc_type_name=APIHelper.SKIP,
                 send_mails_only_to_contact_persons=APIHelper.SKIP,
                 status_id=APIHelper.SKIP,
                 doc_type_key_items=APIHelper.SKIP,
                 auf_nr_search=APIHelper.SKIP,
                 no_db_archiv=APIHelper.SKIP,
                 keep_while_delete_company_data=APIHelper.SKIP,
                 no_doc_to_pdf=APIHelper.SKIP,
                 mandatory_type=APIHelper.SKIP,
                 related_folder_id=APIHelper.SKIP,
                 related_archive_id=APIHelper.SKIP,
                 created_by=APIHelper.SKIP,
                 created_on=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP):
        """Constructor for the LISPublicDMSDocType class"""

        # Initialize members of the class
        if dms_doc_type_id is not APIHelper.SKIP:
            self.dms_doc_type_id = dms_doc_type_id 
        if doc_type_name is not APIHelper.SKIP:
            self.doc_type_name = doc_type_name 
        if send_mails_only_to_contact_persons is not APIHelper.SKIP:
            self.send_mails_only_to_contact_persons = send_mails_only_to_contact_persons 
        if status_id is not APIHelper.SKIP:
            self.status_id = status_id 
        if doc_type_key_items is not APIHelper.SKIP:
            self.doc_type_key_items = doc_type_key_items 
        if auf_nr_search is not APIHelper.SKIP:
            self.auf_nr_search = auf_nr_search 
        if no_db_archiv is not APIHelper.SKIP:
            self.no_db_archiv = no_db_archiv 
        if keep_while_delete_company_data is not APIHelper.SKIP:
            self.keep_while_delete_company_data = keep_while_delete_company_data 
        if no_doc_to_pdf is not APIHelper.SKIP:
            self.no_doc_to_pdf = no_doc_to_pdf 
        if mandatory_type is not APIHelper.SKIP:
            self.mandatory_type = mandatory_type 
        if related_folder_id is not APIHelper.SKIP:
            self.related_folder_id = related_folder_id 
        if related_archive_id is not APIHelper.SKIP:
            self.related_archive_id = related_archive_id 
        if created_by is not APIHelper.SKIP:
            self.created_by = created_by 
        if created_on is not APIHelper.SKIP:
            self.created_on = APIHelper.RFC3339DateTime(created_on) if created_on else None 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        dms_doc_type_id = dictionary.get("dmsDocTypeId") if dictionary.get("dmsDocTypeId") else APIHelper.SKIP
        doc_type_name = dictionary.get("docTypeName") if dictionary.get("docTypeName") else APIHelper.SKIP
        send_mails_only_to_contact_persons = dictionary.get("sendMailsOnlyToContactPersons") if "sendMailsOnlyToContactPersons" in dictionary.keys() else APIHelper.SKIP
        status_id = dictionary.get("statusId") if dictionary.get("statusId") else APIHelper.SKIP
        doc_type_key_items = None
        if dictionary.get('docTypeKeyItems') is not None:
            doc_type_key_items = [LISPublicDMSDocTypeKeyItem.from_dictionary(x) for x in dictionary.get('docTypeKeyItems')]
        else:
            doc_type_key_items = APIHelper.SKIP
        auf_nr_search = dictionary.get("aufNrSearch") if "aufNrSearch" in dictionary.keys() else APIHelper.SKIP
        no_db_archiv = dictionary.get("noDBArchiv") if "noDBArchiv" in dictionary.keys() else APIHelper.SKIP
        keep_while_delete_company_data = dictionary.get("keepWhileDeleteCompanyData") if "keepWhileDeleteCompanyData" in dictionary.keys() else APIHelper.SKIP
        no_doc_to_pdf = dictionary.get("noDocToPDF") if "noDocToPDF" in dictionary.keys() else APIHelper.SKIP
        mandatory_type = dictionary.get("mandatoryType") if dictionary.get("mandatoryType") else APIHelper.SKIP
        related_folder_id = dictionary.get("relatedFolderId") if dictionary.get("relatedFolderId") else APIHelper.SKIP
        related_archive_id = dictionary.get("relatedArchiveId") if dictionary.get("relatedArchiveId") else APIHelper.SKIP
        created_by = dictionary.get("createdBy") if dictionary.get("createdBy") else APIHelper.SKIP
        created_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdOn")).datetime if dictionary.get("createdOn") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        # Return an object of this model
        return cls(dms_doc_type_id,
                   doc_type_name,
                   send_mails_only_to_contact_persons,
                   status_id,
                   doc_type_key_items,
                   auf_nr_search,
                   no_db_archiv,
                   keep_while_delete_company_data,
                   no_doc_to_pdf,
                   mandatory_type,
                   related_folder_id,
                   related_archive_id,
                   created_by,
                   created_on,
                   changed_by,
                   changed_on)
