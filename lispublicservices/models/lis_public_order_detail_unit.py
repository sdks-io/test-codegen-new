# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicOrderDetailUnit(object):

    """Implementation of the 'LISPublicOrderDetailUnit' model.

    The LISOrderDetailUnit data contract.

    Attributes:
        unit_type (UnitType1Enum): Gets or sets UnitType.
        unit_id (string): Gets or sets UnitId.
        quantity (float): Gets or sets Quantity.
        created_on (datetime): Gets or sets CreatedOn.
        created_by (string): Gets or sets CreatedBy.
        changed_on (datetime): Gets or sets ChangedOn.
        changed_by (string): Gets or sets ChangedBy.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "unit_type": 'unitType',
        "unit_id": 'unitId',
        "quantity": 'quantity',
        "created_on": 'createdOn',
        "created_by": 'createdBy',
        "changed_on": 'changedOn',
        "changed_by": 'changedBy'
    }

    _optionals = [
        'unit_type',
        'unit_id',
        'quantity',
        'created_on',
        'created_by',
        'changed_on',
        'changed_by',
    ]

    def __init__(self,
                 unit_type=APIHelper.SKIP,
                 unit_id=APIHelper.SKIP,
                 quantity=APIHelper.SKIP,
                 created_on=APIHelper.SKIP,
                 created_by=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP):
        """Constructor for the LISPublicOrderDetailUnit class"""

        # Initialize members of the class
        if unit_type is not APIHelper.SKIP:
            self.unit_type = unit_type 
        if unit_id is not APIHelper.SKIP:
            self.unit_id = unit_id 
        if quantity is not APIHelper.SKIP:
            self.quantity = quantity 
        if created_on is not APIHelper.SKIP:
            self.created_on = APIHelper.RFC3339DateTime(created_on) if created_on else None 
        if created_by is not APIHelper.SKIP:
            self.created_by = created_by 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        unit_type = dictionary.get("unitType") if dictionary.get("unitType") else APIHelper.SKIP
        unit_id = dictionary.get("unitId") if dictionary.get("unitId") else APIHelper.SKIP
        quantity = dictionary.get("quantity") if dictionary.get("quantity") else APIHelper.SKIP
        created_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdOn")).datetime if dictionary.get("createdOn") else APIHelper.SKIP
        created_by = dictionary.get("createdBy") if dictionary.get("createdBy") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        # Return an object of this model
        return cls(unit_type,
                   unit_id,
                   quantity,
                   created_on,
                   created_by,
                   changed_on,
                   changed_by)
