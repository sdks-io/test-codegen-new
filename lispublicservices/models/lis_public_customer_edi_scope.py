# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerEDIScope(object):

    """Implementation of the 'LISPublicCustomerEDIScope' model.

    The LISCustomerEDIScope data contract.

    Attributes:
        bordero_exchange_no (string): Gets or sets BorderoExchangeNo.
        data_exchange_type (DataExchangeTypeEnum): Gets or sets
            DataExchangeType.
        data_exchange_format (DataExchangeFormatEnum): Gets or sets
            DataExchangeFormat.
        edi_customer_id (int): Gets or sets EDICustomerId.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "bordero_exchange_no": 'borderoExchangeNo',
        "data_exchange_type": 'dataExchangeType',
        "data_exchange_format": 'dataExchangeFormat',
        "edi_customer_id": 'ediCustomerId'
    }

    _optionals = [
        'bordero_exchange_no',
        'data_exchange_type',
        'data_exchange_format',
        'edi_customer_id',
    ]

    def __init__(self,
                 bordero_exchange_no=APIHelper.SKIP,
                 data_exchange_type=APIHelper.SKIP,
                 data_exchange_format=APIHelper.SKIP,
                 edi_customer_id=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerEDIScope class"""

        # Initialize members of the class
        if bordero_exchange_no is not APIHelper.SKIP:
            self.bordero_exchange_no = bordero_exchange_no 
        if data_exchange_type is not APIHelper.SKIP:
            self.data_exchange_type = data_exchange_type 
        if data_exchange_format is not APIHelper.SKIP:
            self.data_exchange_format = data_exchange_format 
        if edi_customer_id is not APIHelper.SKIP:
            self.edi_customer_id = edi_customer_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        bordero_exchange_no = dictionary.get("borderoExchangeNo") if dictionary.get("borderoExchangeNo") else APIHelper.SKIP
        data_exchange_type = dictionary.get("dataExchangeType") if dictionary.get("dataExchangeType") else APIHelper.SKIP
        data_exchange_format = dictionary.get("dataExchangeFormat") if dictionary.get("dataExchangeFormat") else APIHelper.SKIP
        edi_customer_id = dictionary.get("ediCustomerId") if dictionary.get("ediCustomerId") else APIHelper.SKIP
        # Return an object of this model
        return cls(bordero_exchange_no,
                   data_exchange_type,
                   data_exchange_format,
                   edi_customer_id)
