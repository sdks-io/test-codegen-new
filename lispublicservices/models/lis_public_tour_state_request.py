# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicTourStateRequest(object):

    """Implementation of the 'LISPublicTourStateRequest' model.

    A request for a public tour state.

    Attributes:
        tour_id (int): Gets or sets the tour id.
        state (StateEnum): Gets or sets the state.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "tour_id": 'tourId',
        "state": 'state'
    }

    _optionals = [
        'tour_id',
        'state',
    ]

    def __init__(self,
                 tour_id=APIHelper.SKIP,
                 state=APIHelper.SKIP):
        """Constructor for the LISPublicTourStateRequest class"""

        # Initialize members of the class
        if tour_id is not APIHelper.SKIP:
            self.tour_id = tour_id 
        if state is not APIHelper.SKIP:
            self.state = state 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        tour_id = dictionary.get("tourId") if dictionary.get("tourId") else APIHelper.SKIP
        state = dictionary.get("state") if dictionary.get("state") else APIHelper.SKIP
        # Return an object of this model
        return cls(tour_id,
                   state)
