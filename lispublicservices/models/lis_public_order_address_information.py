# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicOrderAddressInformation(object):

    """Implementation of the 'LISPublicOrderAddressInformation' model.

    The LISOrderAddressInformation data contract.

    Attributes:
        customer_id (int): Gets or sets CustomerId.
        contact_person_id (int): Gets or sets ContactPersonId.
        address_type (AddressType1Enum): Gets or sets AddressType.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "customer_id": 'customerId',
        "contact_person_id": 'contactPersonId',
        "address_type": 'addressType'
    }

    _optionals = [
        'customer_id',
        'contact_person_id',
        'address_type',
    ]

    def __init__(self,
                 customer_id=APIHelper.SKIP,
                 contact_person_id=APIHelper.SKIP,
                 address_type=APIHelper.SKIP):
        """Constructor for the LISPublicOrderAddressInformation class"""

        # Initialize members of the class
        if customer_id is not APIHelper.SKIP:
            self.customer_id = customer_id 
        if contact_person_id is not APIHelper.SKIP:
            self.contact_person_id = contact_person_id 
        if address_type is not APIHelper.SKIP:
            self.address_type = address_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        customer_id = dictionary.get("customerId") if dictionary.get("customerId") else APIHelper.SKIP
        contact_person_id = dictionary.get("contactPersonId") if dictionary.get("contactPersonId") else APIHelper.SKIP
        address_type = dictionary.get("addressType") if dictionary.get("addressType") else APIHelper.SKIP
        # Return an object of this model
        return cls(customer_id,
                   contact_person_id,
                   address_type)
