# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicAdditionalStatusText(object):

    """Implementation of the 'LISPublicAdditionalStatusText' model.

    LISAdditionalStatusText

    Attributes:
        additional_status_text_id (int): Gets or sets the additional status
            text identifier.
        changed_on (datetime): Gets or sets the date of the last change to
            this item.
        changed_by (string): Gets or sets the name of the user that made the
            last change to this item.
        status_type (StatusTypeEnum): Gets or sets the type of the status.
        status_nr (int): Gets or sets the status nr.
        additional_status_type (AdditionalStatusTypeEnum): Gets or sets the
            type of the additional status.
        additional_status_nr (int): Gets or sets the additional status nr.
        send_next (bool): Gets or sets the send next.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "additional_status_text_id": 'additionalStatusTextId',
        "changed_on": 'changedOn',
        "changed_by": 'changedBy',
        "status_type": 'statusType',
        "status_nr": 'statusNr',
        "additional_status_type": 'additionalStatusType',
        "additional_status_nr": 'additionalStatusNr',
        "send_next": 'sendNext'
    }

    _optionals = [
        'additional_status_text_id',
        'changed_on',
        'changed_by',
        'status_type',
        'status_nr',
        'additional_status_type',
        'additional_status_nr',
        'send_next',
    ]

    def __init__(self,
                 additional_status_text_id=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP,
                 status_type=APIHelper.SKIP,
                 status_nr=APIHelper.SKIP,
                 additional_status_type=APIHelper.SKIP,
                 additional_status_nr=APIHelper.SKIP,
                 send_next=APIHelper.SKIP):
        """Constructor for the LISPublicAdditionalStatusText class"""

        # Initialize members of the class
        if additional_status_text_id is not APIHelper.SKIP:
            self.additional_status_text_id = additional_status_text_id 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 
        if status_type is not APIHelper.SKIP:
            self.status_type = status_type 
        if status_nr is not APIHelper.SKIP:
            self.status_nr = status_nr 
        if additional_status_type is not APIHelper.SKIP:
            self.additional_status_type = additional_status_type 
        if additional_status_nr is not APIHelper.SKIP:
            self.additional_status_nr = additional_status_nr 
        if send_next is not APIHelper.SKIP:
            self.send_next = send_next 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        additional_status_text_id = dictionary.get("additionalStatusTextId") if dictionary.get("additionalStatusTextId") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        status_type = dictionary.get("statusType") if dictionary.get("statusType") else APIHelper.SKIP
        status_nr = dictionary.get("statusNr") if dictionary.get("statusNr") else APIHelper.SKIP
        additional_status_type = dictionary.get("additionalStatusType") if dictionary.get("additionalStatusType") else APIHelper.SKIP
        additional_status_nr = dictionary.get("additionalStatusNr") if dictionary.get("additionalStatusNr") else APIHelper.SKIP
        send_next = dictionary.get("sendNext") if "sendNext" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(additional_status_text_id,
                   changed_on,
                   changed_by,
                   status_type,
                   status_nr,
                   additional_status_type,
                   additional_status_nr,
                   send_next)
