# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicInvoicingPreviewRequest(object):

    """Implementation of the 'LISPublicInvoicingPreviewRequest' model.

    TODO: type model description here.

    Attributes:
        invoice_preview_type (InvoicePreviewTypeEnum): TODO: type description
            here.
        invoice_preview_group (uuid|string): TODO: type description here.
        invoice_documents_count (int): TODO: type description here.
        invoice_side (string): TODO: type description here.
        is_cancellation (bool): TODO: type description here.
        cost_allocation (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "invoice_preview_type": 'invoicePreviewType',
        "invoice_preview_group": 'invoicePreviewGroup',
        "invoice_documents_count": 'invoiceDocumentsCount',
        "invoice_side": 'invoiceSide',
        "is_cancellation": 'isCancellation',
        "cost_allocation": 'costAllocation'
    }

    _optionals = [
        'invoice_preview_type',
        'invoice_preview_group',
        'invoice_documents_count',
        'invoice_side',
        'is_cancellation',
        'cost_allocation',
    ]

    def __init__(self,
                 invoice_preview_type=APIHelper.SKIP,
                 invoice_preview_group=APIHelper.SKIP,
                 invoice_documents_count=APIHelper.SKIP,
                 invoice_side=APIHelper.SKIP,
                 is_cancellation=APIHelper.SKIP,
                 cost_allocation=APIHelper.SKIP):
        """Constructor for the LISPublicInvoicingPreviewRequest class"""

        # Initialize members of the class
        if invoice_preview_type is not APIHelper.SKIP:
            self.invoice_preview_type = invoice_preview_type 
        if invoice_preview_group is not APIHelper.SKIP:
            self.invoice_preview_group = invoice_preview_group 
        if invoice_documents_count is not APIHelper.SKIP:
            self.invoice_documents_count = invoice_documents_count 
        if invoice_side is not APIHelper.SKIP:
            self.invoice_side = invoice_side 
        if is_cancellation is not APIHelper.SKIP:
            self.is_cancellation = is_cancellation 
        if cost_allocation is not APIHelper.SKIP:
            self.cost_allocation = cost_allocation 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        invoice_preview_type = dictionary.get("invoicePreviewType") if dictionary.get("invoicePreviewType") else APIHelper.SKIP
        invoice_preview_group = dictionary.get("invoicePreviewGroup") if dictionary.get("invoicePreviewGroup") else APIHelper.SKIP
        invoice_documents_count = dictionary.get("invoiceDocumentsCount") if dictionary.get("invoiceDocumentsCount") else APIHelper.SKIP
        invoice_side = dictionary.get("invoiceSide") if dictionary.get("invoiceSide") else APIHelper.SKIP
        is_cancellation = dictionary.get("isCancellation") if "isCancellation" in dictionary.keys() else APIHelper.SKIP
        cost_allocation = dictionary.get("costAllocation") if "costAllocation" in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(invoice_preview_type,
                   invoice_preview_group,
                   invoice_documents_count,
                   invoice_side,
                   is_cancellation,
                   cost_allocation)
