# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerVoucherPrintingScope(object):

    """Implementation of the 'LISPublicCustomerVoucherPrintingScope' model.

    The LISCustomerVoucherPrintingScope data contract.

    Attributes:
        print_debit (PrintDebitEnum): Gets or sets PrintDebit.
        print_credit (PrintCreditEnum): Gets or sets PrintCredit.
        debit_form_type (int): Gets or sets DebitFormType.
        debit_own_form_type (int): Gets or sets DebitOwnFormType.
        debit_formular_type (int): Gets or sets the type of the debit
            formular.
        credit_form_type (int): Gets or sets CreditFormType.
        credit_own_form_type (int): Gets or sets CreditOwnFormType.
        credit_formular_type (int): Gets or sets the type of the credit
            formular.
        debit_invoicing_period (DebitInvoicingPeriodEnum): Gets or sets
            DebitInvoicingPeriod.
        credit_invoicing_period (CreditInvoicingPeriodEnum): Gets or sets
            CreditInvoicingPeriod.
        debit_invoicing_period_grouping (DebitInvoicingPeriodGroupingEnum):
            Gets or sets DebitInvoicingPeriodGrouping.
        credit_invoicing_period_grouping (CreditInvoicingPeriodGroupingEnum):
            Gets or sets CreditInvoicingPeriodGrouping.
        debit_print_currency (string): Gets or sets DebitPrintCurrency.
        credit_print_currency (string): Gets or sets CreditPrintCurrency.
        print_vat_separately (bool): TODO: type description here.
        invoice_conversion (InvoiceConversionEnum): Gets or sets
            InvoiceConversion.
        differing_voucher_recipient_debit (int): Gets or sets
            DifferingVoucherRecipientDebit.
        differing_voucher_recipient_credit (int): Gets or sets
            DifferingVoucherRecipientCredit.
        aggregated_print_debit (bool): Gets or sets AggregatedPrintDebit.
        incoming_debit (bool): Gets or sets IncomingDebit.
        aggregated_print_credit (bool): Gets or sets AggregatedPrintCredit.
        incoming_credit (bool): Gets or sets IncomingCredit.
        subsequent_charges_on_amount_level (bool): Gets or sets the subsequent
            charges on amount level.
        print_sort_debit_1 (string): Gets or sets PrintSortDebit1.
        print_sort_debit_2 (string): Gets or sets PrintSortDebit2.
        print_sort_debit_3 (string): Gets or sets PrintSortDebit3.
        print_sort_debit_4 (string): Gets or sets PrintSortDebit4.
        print_sort_credit_1 (string): Gets or sets PrintSortCredit1.
        print_sort_credit_2 (string): Gets or sets PrintSortCredit2.
        print_sort_credit_3 (string): Gets or sets PrintSortCredit3.
        print_sort_credit_4 (string): Gets or sets PrintSortCredit4.
        group_by_sort_credit_1 (bool): Gets or sets GroupBySortCredit1.
        group_by_sort_debit_1 (bool): Gets or sets GroupBySortDebit1.
        print_co_2_emissions (bool): Gets or sets PrintCO2Emissions.
        special_invoice_credit_form_type (int): Gets or sets the type of the
            special invoice credit form.
        special_invoice_credit_own_form_type (int): Gets or sets the type of
            the special invoice credit own form.
        special_invoice_credit_formular_type (int): Gets or sets the type of
            the special invoice credit formular.
        special_invoice_debit_form_type (int): Gets or sets the type of the
            special invoice debit form.
        special_invoice_debit_own_form_type (int): Gets or sets the type of
            the special invoice debit own form.
        special_invoice_debit_formular_type (int): Gets or sets the type of
            the special invoice debit formular.
        max_position_count_debit (int): Gets or sets MaxPositionCountDebit.
        max_position_count_credit (int): Gets or sets MaxPositionCountCredit.
        shipping_papers_charges_debit (float): Gets or sets
            ShippingPapersChargesDebit.
        shipping_papers_charges_credit (float): Gets or sets
            ShippingPapersChargesCredit.
        shipping_papers_type_debit (ShippingPapersTypeDebitEnum): Gets or sets
            ShippingPapersTypeDebit.
        shipping_papers_type_credit (ShippingPapersTypeCreditEnum): Gets or
            sets ShippingPapersTypeCredit.
        shipping_papers_charges_limit_credit (float): Gets or sets
            ShippingPapersChargesLimitCredit.
        shipping_papers_charges_limit_debit (float): Gets or sets
            ShippingPapersChargesLimitDebit.
        fuel_type (FuelTypeEnum): Gets or sets the type of the fuel.
        fuel_consumption (float): Gets or sets the fuel consumption.
        average_emissions (float): Gets or sets the average emissions.
        exchange_rate_date_mode (ExchangeRateDateModeEnum): Gets or sets the
            exchange rate date mode.
        exchange_rate_date_deviation (int): Gets or sets the exchange rate
            date deviation.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "print_debit": 'printDebit',
        "print_credit": 'printCredit',
        "debit_form_type": 'debitFormType',
        "debit_own_form_type": 'debitOwnFormType',
        "debit_formular_type": 'debitFormularType',
        "credit_form_type": 'creditFormType',
        "credit_own_form_type": 'creditOwnFormType',
        "credit_formular_type": 'creditFormularType',
        "debit_invoicing_period": 'debitInvoicingPeriod',
        "credit_invoicing_period": 'creditInvoicingPeriod',
        "debit_invoicing_period_grouping": 'debitInvoicingPeriodGrouping',
        "credit_invoicing_period_grouping": 'creditInvoicingPeriodGrouping',
        "debit_print_currency": 'debitPrintCurrency',
        "credit_print_currency": 'creditPrintCurrency',
        "print_vat_separately": 'printVATSeparately',
        "invoice_conversion": 'invoiceConversion',
        "differing_voucher_recipient_debit": 'differingVoucherRecipientDebit',
        "differing_voucher_recipient_credit": 'differingVoucherRecipientCredit',
        "aggregated_print_debit": 'aggregatedPrintDebit',
        "incoming_debit": 'incomingDebit',
        "aggregated_print_credit": 'aggregatedPrintCredit',
        "incoming_credit": 'incomingCredit',
        "subsequent_charges_on_amount_level": 'subsequentChargesOnAmountLevel',
        "print_sort_debit_1": 'printSortDebit1',
        "print_sort_debit_2": 'printSortDebit2',
        "print_sort_debit_3": 'printSortDebit3',
        "print_sort_debit_4": 'printSortDebit4',
        "print_sort_credit_1": 'printSortCredit1',
        "print_sort_credit_2": 'printSortCredit2',
        "print_sort_credit_3": 'printSortCredit3',
        "print_sort_credit_4": 'printSortCredit4',
        "group_by_sort_credit_1": 'groupBySortCredit1',
        "group_by_sort_debit_1": 'groupBySortDebit1',
        "print_co_2_emissions": 'printCO2Emissions',
        "special_invoice_credit_form_type": 'specialInvoiceCreditFormType',
        "special_invoice_credit_own_form_type": 'specialInvoiceCreditOwnFormType',
        "special_invoice_credit_formular_type": 'specialInvoiceCreditFormularType',
        "special_invoice_debit_form_type": 'specialInvoiceDebitFormType',
        "special_invoice_debit_own_form_type": 'specialInvoiceDebitOwnFormType',
        "special_invoice_debit_formular_type": 'specialInvoiceDebitFormularType',
        "max_position_count_debit": 'maxPositionCountDebit',
        "max_position_count_credit": 'maxPositionCountCredit',
        "shipping_papers_charges_debit": 'shippingPapersChargesDebit',
        "shipping_papers_charges_credit": 'shippingPapersChargesCredit',
        "shipping_papers_type_debit": 'shippingPapersTypeDebit',
        "shipping_papers_type_credit": 'shippingPapersTypeCredit',
        "shipping_papers_charges_limit_credit": 'shippingPapersChargesLimitCredit',
        "shipping_papers_charges_limit_debit": 'shippingPapersChargesLimitDebit',
        "fuel_type": 'fuelType',
        "fuel_consumption": 'fuelConsumption',
        "average_emissions": 'averageEmissions',
        "exchange_rate_date_mode": 'exchangeRateDateMode',
        "exchange_rate_date_deviation": 'exchangeRateDateDeviation'
    }

    _optionals = [
        'print_debit',
        'print_credit',
        'debit_form_type',
        'debit_own_form_type',
        'debit_formular_type',
        'credit_form_type',
        'credit_own_form_type',
        'credit_formular_type',
        'debit_invoicing_period',
        'credit_invoicing_period',
        'debit_invoicing_period_grouping',
        'credit_invoicing_period_grouping',
        'debit_print_currency',
        'credit_print_currency',
        'print_vat_separately',
        'invoice_conversion',
        'differing_voucher_recipient_debit',
        'differing_voucher_recipient_credit',
        'aggregated_print_debit',
        'incoming_debit',
        'aggregated_print_credit',
        'incoming_credit',
        'subsequent_charges_on_amount_level',
        'print_sort_debit_1',
        'print_sort_debit_2',
        'print_sort_debit_3',
        'print_sort_debit_4',
        'print_sort_credit_1',
        'print_sort_credit_2',
        'print_sort_credit_3',
        'print_sort_credit_4',
        'group_by_sort_credit_1',
        'group_by_sort_debit_1',
        'print_co_2_emissions',
        'special_invoice_credit_form_type',
        'special_invoice_credit_own_form_type',
        'special_invoice_credit_formular_type',
        'special_invoice_debit_form_type',
        'special_invoice_debit_own_form_type',
        'special_invoice_debit_formular_type',
        'max_position_count_debit',
        'max_position_count_credit',
        'shipping_papers_charges_debit',
        'shipping_papers_charges_credit',
        'shipping_papers_type_debit',
        'shipping_papers_type_credit',
        'shipping_papers_charges_limit_credit',
        'shipping_papers_charges_limit_debit',
        'fuel_type',
        'fuel_consumption',
        'average_emissions',
        'exchange_rate_date_mode',
        'exchange_rate_date_deviation',
    ]

    def __init__(self,
                 print_debit=APIHelper.SKIP,
                 print_credit=APIHelper.SKIP,
                 debit_form_type=APIHelper.SKIP,
                 debit_own_form_type=APIHelper.SKIP,
                 debit_formular_type=APIHelper.SKIP,
                 credit_form_type=APIHelper.SKIP,
                 credit_own_form_type=APIHelper.SKIP,
                 credit_formular_type=APIHelper.SKIP,
                 debit_invoicing_period=APIHelper.SKIP,
                 credit_invoicing_period=APIHelper.SKIP,
                 debit_invoicing_period_grouping=APIHelper.SKIP,
                 credit_invoicing_period_grouping=APIHelper.SKIP,
                 debit_print_currency=APIHelper.SKIP,
                 credit_print_currency=APIHelper.SKIP,
                 print_vat_separately=APIHelper.SKIP,
                 invoice_conversion=APIHelper.SKIP,
                 differing_voucher_recipient_debit=APIHelper.SKIP,
                 differing_voucher_recipient_credit=APIHelper.SKIP,
                 aggregated_print_debit=APIHelper.SKIP,
                 incoming_debit=APIHelper.SKIP,
                 aggregated_print_credit=APIHelper.SKIP,
                 incoming_credit=APIHelper.SKIP,
                 subsequent_charges_on_amount_level=APIHelper.SKIP,
                 print_sort_debit_1=APIHelper.SKIP,
                 print_sort_debit_2=APIHelper.SKIP,
                 print_sort_debit_3=APIHelper.SKIP,
                 print_sort_debit_4=APIHelper.SKIP,
                 print_sort_credit_1=APIHelper.SKIP,
                 print_sort_credit_2=APIHelper.SKIP,
                 print_sort_credit_3=APIHelper.SKIP,
                 print_sort_credit_4=APIHelper.SKIP,
                 group_by_sort_credit_1=APIHelper.SKIP,
                 group_by_sort_debit_1=APIHelper.SKIP,
                 print_co_2_emissions=APIHelper.SKIP,
                 special_invoice_credit_form_type=APIHelper.SKIP,
                 special_invoice_credit_own_form_type=APIHelper.SKIP,
                 special_invoice_credit_formular_type=APIHelper.SKIP,
                 special_invoice_debit_form_type=APIHelper.SKIP,
                 special_invoice_debit_own_form_type=APIHelper.SKIP,
                 special_invoice_debit_formular_type=APIHelper.SKIP,
                 max_position_count_debit=APIHelper.SKIP,
                 max_position_count_credit=APIHelper.SKIP,
                 shipping_papers_charges_debit=APIHelper.SKIP,
                 shipping_papers_charges_credit=APIHelper.SKIP,
                 shipping_papers_type_debit=APIHelper.SKIP,
                 shipping_papers_type_credit=APIHelper.SKIP,
                 shipping_papers_charges_limit_credit=APIHelper.SKIP,
                 shipping_papers_charges_limit_debit=APIHelper.SKIP,
                 fuel_type=APIHelper.SKIP,
                 fuel_consumption=APIHelper.SKIP,
                 average_emissions=APIHelper.SKIP,
                 exchange_rate_date_mode=APIHelper.SKIP,
                 exchange_rate_date_deviation=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerVoucherPrintingScope class"""

        # Initialize members of the class
        if print_debit is not APIHelper.SKIP:
            self.print_debit = print_debit 
        if print_credit is not APIHelper.SKIP:
            self.print_credit = print_credit 
        if debit_form_type is not APIHelper.SKIP:
            self.debit_form_type = debit_form_type 
        if debit_own_form_type is not APIHelper.SKIP:
            self.debit_own_form_type = debit_own_form_type 
        if debit_formular_type is not APIHelper.SKIP:
            self.debit_formular_type = debit_formular_type 
        if credit_form_type is not APIHelper.SKIP:
            self.credit_form_type = credit_form_type 
        if credit_own_form_type is not APIHelper.SKIP:
            self.credit_own_form_type = credit_own_form_type 
        if credit_formular_type is not APIHelper.SKIP:
            self.credit_formular_type = credit_formular_type 
        if debit_invoicing_period is not APIHelper.SKIP:
            self.debit_invoicing_period = debit_invoicing_period 
        if credit_invoicing_period is not APIHelper.SKIP:
            self.credit_invoicing_period = credit_invoicing_period 
        if debit_invoicing_period_grouping is not APIHelper.SKIP:
            self.debit_invoicing_period_grouping = debit_invoicing_period_grouping 
        if credit_invoicing_period_grouping is not APIHelper.SKIP:
            self.credit_invoicing_period_grouping = credit_invoicing_period_grouping 
        if debit_print_currency is not APIHelper.SKIP:
            self.debit_print_currency = debit_print_currency 
        if credit_print_currency is not APIHelper.SKIP:
            self.credit_print_currency = credit_print_currency 
        if print_vat_separately is not APIHelper.SKIP:
            self.print_vat_separately = print_vat_separately 
        if invoice_conversion is not APIHelper.SKIP:
            self.invoice_conversion = invoice_conversion 
        if differing_voucher_recipient_debit is not APIHelper.SKIP:
            self.differing_voucher_recipient_debit = differing_voucher_recipient_debit 
        if differing_voucher_recipient_credit is not APIHelper.SKIP:
            self.differing_voucher_recipient_credit = differing_voucher_recipient_credit 
        if aggregated_print_debit is not APIHelper.SKIP:
            self.aggregated_print_debit = aggregated_print_debit 
        if incoming_debit is not APIHelper.SKIP:
            self.incoming_debit = incoming_debit 
        if aggregated_print_credit is not APIHelper.SKIP:
            self.aggregated_print_credit = aggregated_print_credit 
        if incoming_credit is not APIHelper.SKIP:
            self.incoming_credit = incoming_credit 
        if subsequent_charges_on_amount_level is not APIHelper.SKIP:
            self.subsequent_charges_on_amount_level = subsequent_charges_on_amount_level 
        if print_sort_debit_1 is not APIHelper.SKIP:
            self.print_sort_debit_1 = print_sort_debit_1 
        if print_sort_debit_2 is not APIHelper.SKIP:
            self.print_sort_debit_2 = print_sort_debit_2 
        if print_sort_debit_3 is not APIHelper.SKIP:
            self.print_sort_debit_3 = print_sort_debit_3 
        if print_sort_debit_4 is not APIHelper.SKIP:
            self.print_sort_debit_4 = print_sort_debit_4 
        if print_sort_credit_1 is not APIHelper.SKIP:
            self.print_sort_credit_1 = print_sort_credit_1 
        if print_sort_credit_2 is not APIHelper.SKIP:
            self.print_sort_credit_2 = print_sort_credit_2 
        if print_sort_credit_3 is not APIHelper.SKIP:
            self.print_sort_credit_3 = print_sort_credit_3 
        if print_sort_credit_4 is not APIHelper.SKIP:
            self.print_sort_credit_4 = print_sort_credit_4 
        if group_by_sort_credit_1 is not APIHelper.SKIP:
            self.group_by_sort_credit_1 = group_by_sort_credit_1 
        if group_by_sort_debit_1 is not APIHelper.SKIP:
            self.group_by_sort_debit_1 = group_by_sort_debit_1 
        if print_co_2_emissions is not APIHelper.SKIP:
            self.print_co_2_emissions = print_co_2_emissions 
        if special_invoice_credit_form_type is not APIHelper.SKIP:
            self.special_invoice_credit_form_type = special_invoice_credit_form_type 
        if special_invoice_credit_own_form_type is not APIHelper.SKIP:
            self.special_invoice_credit_own_form_type = special_invoice_credit_own_form_type 
        if special_invoice_credit_formular_type is not APIHelper.SKIP:
            self.special_invoice_credit_formular_type = special_invoice_credit_formular_type 
        if special_invoice_debit_form_type is not APIHelper.SKIP:
            self.special_invoice_debit_form_type = special_invoice_debit_form_type 
        if special_invoice_debit_own_form_type is not APIHelper.SKIP:
            self.special_invoice_debit_own_form_type = special_invoice_debit_own_form_type 
        if special_invoice_debit_formular_type is not APIHelper.SKIP:
            self.special_invoice_debit_formular_type = special_invoice_debit_formular_type 
        if max_position_count_debit is not APIHelper.SKIP:
            self.max_position_count_debit = max_position_count_debit 
        if max_position_count_credit is not APIHelper.SKIP:
            self.max_position_count_credit = max_position_count_credit 
        if shipping_papers_charges_debit is not APIHelper.SKIP:
            self.shipping_papers_charges_debit = shipping_papers_charges_debit 
        if shipping_papers_charges_credit is not APIHelper.SKIP:
            self.shipping_papers_charges_credit = shipping_papers_charges_credit 
        if shipping_papers_type_debit is not APIHelper.SKIP:
            self.shipping_papers_type_debit = shipping_papers_type_debit 
        if shipping_papers_type_credit is not APIHelper.SKIP:
            self.shipping_papers_type_credit = shipping_papers_type_credit 
        if shipping_papers_charges_limit_credit is not APIHelper.SKIP:
            self.shipping_papers_charges_limit_credit = shipping_papers_charges_limit_credit 
        if shipping_papers_charges_limit_debit is not APIHelper.SKIP:
            self.shipping_papers_charges_limit_debit = shipping_papers_charges_limit_debit 
        if fuel_type is not APIHelper.SKIP:
            self.fuel_type = fuel_type 
        if fuel_consumption is not APIHelper.SKIP:
            self.fuel_consumption = fuel_consumption 
        if average_emissions is not APIHelper.SKIP:
            self.average_emissions = average_emissions 
        if exchange_rate_date_mode is not APIHelper.SKIP:
            self.exchange_rate_date_mode = exchange_rate_date_mode 
        if exchange_rate_date_deviation is not APIHelper.SKIP:
            self.exchange_rate_date_deviation = exchange_rate_date_deviation 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        print_debit = dictionary.get("printDebit") if dictionary.get("printDebit") else APIHelper.SKIP
        print_credit = dictionary.get("printCredit") if dictionary.get("printCredit") else APIHelper.SKIP
        debit_form_type = dictionary.get("debitFormType") if dictionary.get("debitFormType") else APIHelper.SKIP
        debit_own_form_type = dictionary.get("debitOwnFormType") if dictionary.get("debitOwnFormType") else APIHelper.SKIP
        debit_formular_type = dictionary.get("debitFormularType") if dictionary.get("debitFormularType") else APIHelper.SKIP
        credit_form_type = dictionary.get("creditFormType") if dictionary.get("creditFormType") else APIHelper.SKIP
        credit_own_form_type = dictionary.get("creditOwnFormType") if dictionary.get("creditOwnFormType") else APIHelper.SKIP
        credit_formular_type = dictionary.get("creditFormularType") if dictionary.get("creditFormularType") else APIHelper.SKIP
        debit_invoicing_period = dictionary.get("debitInvoicingPeriod") if dictionary.get("debitInvoicingPeriod") else APIHelper.SKIP
        credit_invoicing_period = dictionary.get("creditInvoicingPeriod") if dictionary.get("creditInvoicingPeriod") else APIHelper.SKIP
        debit_invoicing_period_grouping = dictionary.get("debitInvoicingPeriodGrouping") if dictionary.get("debitInvoicingPeriodGrouping") else APIHelper.SKIP
        credit_invoicing_period_grouping = dictionary.get("creditInvoicingPeriodGrouping") if dictionary.get("creditInvoicingPeriodGrouping") else APIHelper.SKIP
        debit_print_currency = dictionary.get("debitPrintCurrency") if dictionary.get("debitPrintCurrency") else APIHelper.SKIP
        credit_print_currency = dictionary.get("creditPrintCurrency") if dictionary.get("creditPrintCurrency") else APIHelper.SKIP
        print_vat_separately = dictionary.get("printVATSeparately") if "printVATSeparately" in dictionary.keys() else APIHelper.SKIP
        invoice_conversion = dictionary.get("invoiceConversion") if dictionary.get("invoiceConversion") else APIHelper.SKIP
        differing_voucher_recipient_debit = dictionary.get("differingVoucherRecipientDebit") if dictionary.get("differingVoucherRecipientDebit") else APIHelper.SKIP
        differing_voucher_recipient_credit = dictionary.get("differingVoucherRecipientCredit") if dictionary.get("differingVoucherRecipientCredit") else APIHelper.SKIP
        aggregated_print_debit = dictionary.get("aggregatedPrintDebit") if "aggregatedPrintDebit" in dictionary.keys() else APIHelper.SKIP
        incoming_debit = dictionary.get("incomingDebit") if "incomingDebit" in dictionary.keys() else APIHelper.SKIP
        aggregated_print_credit = dictionary.get("aggregatedPrintCredit") if "aggregatedPrintCredit" in dictionary.keys() else APIHelper.SKIP
        incoming_credit = dictionary.get("incomingCredit") if "incomingCredit" in dictionary.keys() else APIHelper.SKIP
        subsequent_charges_on_amount_level = dictionary.get("subsequentChargesOnAmountLevel") if "subsequentChargesOnAmountLevel" in dictionary.keys() else APIHelper.SKIP
        print_sort_debit_1 = dictionary.get("printSortDebit1") if dictionary.get("printSortDebit1") else APIHelper.SKIP
        print_sort_debit_2 = dictionary.get("printSortDebit2") if dictionary.get("printSortDebit2") else APIHelper.SKIP
        print_sort_debit_3 = dictionary.get("printSortDebit3") if dictionary.get("printSortDebit3") else APIHelper.SKIP
        print_sort_debit_4 = dictionary.get("printSortDebit4") if dictionary.get("printSortDebit4") else APIHelper.SKIP
        print_sort_credit_1 = dictionary.get("printSortCredit1") if dictionary.get("printSortCredit1") else APIHelper.SKIP
        print_sort_credit_2 = dictionary.get("printSortCredit2") if dictionary.get("printSortCredit2") else APIHelper.SKIP
        print_sort_credit_3 = dictionary.get("printSortCredit3") if dictionary.get("printSortCredit3") else APIHelper.SKIP
        print_sort_credit_4 = dictionary.get("printSortCredit4") if dictionary.get("printSortCredit4") else APIHelper.SKIP
        group_by_sort_credit_1 = dictionary.get("groupBySortCredit1") if "groupBySortCredit1" in dictionary.keys() else APIHelper.SKIP
        group_by_sort_debit_1 = dictionary.get("groupBySortDebit1") if "groupBySortDebit1" in dictionary.keys() else APIHelper.SKIP
        print_co_2_emissions = dictionary.get("printCO2Emissions") if "printCO2Emissions" in dictionary.keys() else APIHelper.SKIP
        special_invoice_credit_form_type = dictionary.get("specialInvoiceCreditFormType") if dictionary.get("specialInvoiceCreditFormType") else APIHelper.SKIP
        special_invoice_credit_own_form_type = dictionary.get("specialInvoiceCreditOwnFormType") if dictionary.get("specialInvoiceCreditOwnFormType") else APIHelper.SKIP
        special_invoice_credit_formular_type = dictionary.get("specialInvoiceCreditFormularType") if dictionary.get("specialInvoiceCreditFormularType") else APIHelper.SKIP
        special_invoice_debit_form_type = dictionary.get("specialInvoiceDebitFormType") if dictionary.get("specialInvoiceDebitFormType") else APIHelper.SKIP
        special_invoice_debit_own_form_type = dictionary.get("specialInvoiceDebitOwnFormType") if dictionary.get("specialInvoiceDebitOwnFormType") else APIHelper.SKIP
        special_invoice_debit_formular_type = dictionary.get("specialInvoiceDebitFormularType") if dictionary.get("specialInvoiceDebitFormularType") else APIHelper.SKIP
        max_position_count_debit = dictionary.get("maxPositionCountDebit") if dictionary.get("maxPositionCountDebit") else APIHelper.SKIP
        max_position_count_credit = dictionary.get("maxPositionCountCredit") if dictionary.get("maxPositionCountCredit") else APIHelper.SKIP
        shipping_papers_charges_debit = dictionary.get("shippingPapersChargesDebit") if dictionary.get("shippingPapersChargesDebit") else APIHelper.SKIP
        shipping_papers_charges_credit = dictionary.get("shippingPapersChargesCredit") if dictionary.get("shippingPapersChargesCredit") else APIHelper.SKIP
        shipping_papers_type_debit = dictionary.get("shippingPapersTypeDebit") if dictionary.get("shippingPapersTypeDebit") else APIHelper.SKIP
        shipping_papers_type_credit = dictionary.get("shippingPapersTypeCredit") if dictionary.get("shippingPapersTypeCredit") else APIHelper.SKIP
        shipping_papers_charges_limit_credit = dictionary.get("shippingPapersChargesLimitCredit") if dictionary.get("shippingPapersChargesLimitCredit") else APIHelper.SKIP
        shipping_papers_charges_limit_debit = dictionary.get("shippingPapersChargesLimitDebit") if dictionary.get("shippingPapersChargesLimitDebit") else APIHelper.SKIP
        fuel_type = dictionary.get("fuelType") if dictionary.get("fuelType") else APIHelper.SKIP
        fuel_consumption = dictionary.get("fuelConsumption") if dictionary.get("fuelConsumption") else APIHelper.SKIP
        average_emissions = dictionary.get("averageEmissions") if dictionary.get("averageEmissions") else APIHelper.SKIP
        exchange_rate_date_mode = dictionary.get("exchangeRateDateMode") if dictionary.get("exchangeRateDateMode") else APIHelper.SKIP
        exchange_rate_date_deviation = dictionary.get("exchangeRateDateDeviation") if dictionary.get("exchangeRateDateDeviation") else APIHelper.SKIP
        # Return an object of this model
        return cls(print_debit,
                   print_credit,
                   debit_form_type,
                   debit_own_form_type,
                   debit_formular_type,
                   credit_form_type,
                   credit_own_form_type,
                   credit_formular_type,
                   debit_invoicing_period,
                   credit_invoicing_period,
                   debit_invoicing_period_grouping,
                   credit_invoicing_period_grouping,
                   debit_print_currency,
                   credit_print_currency,
                   print_vat_separately,
                   invoice_conversion,
                   differing_voucher_recipient_debit,
                   differing_voucher_recipient_credit,
                   aggregated_print_debit,
                   incoming_debit,
                   aggregated_print_credit,
                   incoming_credit,
                   subsequent_charges_on_amount_level,
                   print_sort_debit_1,
                   print_sort_debit_2,
                   print_sort_debit_3,
                   print_sort_debit_4,
                   print_sort_credit_1,
                   print_sort_credit_2,
                   print_sort_credit_3,
                   print_sort_credit_4,
                   group_by_sort_credit_1,
                   group_by_sort_debit_1,
                   print_co_2_emissions,
                   special_invoice_credit_form_type,
                   special_invoice_credit_own_form_type,
                   special_invoice_credit_formular_type,
                   special_invoice_debit_form_type,
                   special_invoice_debit_own_form_type,
                   special_invoice_debit_formular_type,
                   max_position_count_debit,
                   max_position_count_credit,
                   shipping_papers_charges_debit,
                   shipping_papers_charges_credit,
                   shipping_papers_type_debit,
                   shipping_papers_type_credit,
                   shipping_papers_charges_limit_credit,
                   shipping_papers_charges_limit_debit,
                   fuel_type,
                   fuel_consumption,
                   average_emissions,
                   exchange_rate_date_mode,
                   exchange_rate_date_deviation)
