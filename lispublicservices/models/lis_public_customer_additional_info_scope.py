# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerAdditionalInfoScope(object):

    """Implementation of the 'LISPublicCustomerAdditionalInfoScope' model.

    The LISCustomerAdditionalInfoScope data contract.

    Attributes:
        customer_group (string): Gets or sets CustomerGroup.
        business (string): Gets or sets Business.
        global_location_number (string): Gets or sets GlobalLocationNumber.
        statistics_1 (string): Gets or sets Statistics1.
        statistics_2 (string): Gets or sets Statistics2.
        statistics_3 (string): Gets or sets Statistics3.
        statistics_4 (string): Gets or sets Statistics4.
        statistics_5 (string): Gets or sets Statistics5.
        short_text (string): Gets or sets the short text.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "customer_group": 'customerGroup',
        "business": 'business',
        "global_location_number": 'globalLocationNumber',
        "statistics_1": 'statistics1',
        "statistics_2": 'statistics2',
        "statistics_3": 'statistics3',
        "statistics_4": 'statistics4',
        "statistics_5": 'statistics5',
        "short_text": 'shortText'
    }

    _optionals = [
        'customer_group',
        'business',
        'global_location_number',
        'statistics_1',
        'statistics_2',
        'statistics_3',
        'statistics_4',
        'statistics_5',
        'short_text',
    ]

    def __init__(self,
                 customer_group=APIHelper.SKIP,
                 business=APIHelper.SKIP,
                 global_location_number=APIHelper.SKIP,
                 statistics_1=APIHelper.SKIP,
                 statistics_2=APIHelper.SKIP,
                 statistics_3=APIHelper.SKIP,
                 statistics_4=APIHelper.SKIP,
                 statistics_5=APIHelper.SKIP,
                 short_text=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerAdditionalInfoScope class"""

        # Initialize members of the class
        if customer_group is not APIHelper.SKIP:
            self.customer_group = customer_group 
        if business is not APIHelper.SKIP:
            self.business = business 
        if global_location_number is not APIHelper.SKIP:
            self.global_location_number = global_location_number 
        if statistics_1 is not APIHelper.SKIP:
            self.statistics_1 = statistics_1 
        if statistics_2 is not APIHelper.SKIP:
            self.statistics_2 = statistics_2 
        if statistics_3 is not APIHelper.SKIP:
            self.statistics_3 = statistics_3 
        if statistics_4 is not APIHelper.SKIP:
            self.statistics_4 = statistics_4 
        if statistics_5 is not APIHelper.SKIP:
            self.statistics_5 = statistics_5 
        if short_text is not APIHelper.SKIP:
            self.short_text = short_text 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        customer_group = dictionary.get("customerGroup") if dictionary.get("customerGroup") else APIHelper.SKIP
        business = dictionary.get("business") if dictionary.get("business") else APIHelper.SKIP
        global_location_number = dictionary.get("globalLocationNumber") if dictionary.get("globalLocationNumber") else APIHelper.SKIP
        statistics_1 = dictionary.get("statistics1") if dictionary.get("statistics1") else APIHelper.SKIP
        statistics_2 = dictionary.get("statistics2") if dictionary.get("statistics2") else APIHelper.SKIP
        statistics_3 = dictionary.get("statistics3") if dictionary.get("statistics3") else APIHelper.SKIP
        statistics_4 = dictionary.get("statistics4") if dictionary.get("statistics4") else APIHelper.SKIP
        statistics_5 = dictionary.get("statistics5") if dictionary.get("statistics5") else APIHelper.SKIP
        short_text = dictionary.get("shortText") if dictionary.get("shortText") else APIHelper.SKIP
        # Return an object of this model
        return cls(customer_group,
                   business,
                   global_location_number,
                   statistics_1,
                   statistics_2,
                   statistics_3,
                   statistics_4,
                   statistics_5,
                   short_text)
