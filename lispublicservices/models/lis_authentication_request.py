# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISAuthenticationRequest(object):

    """Implementation of the 'LISAuthenticationRequest' model.

    Request object of the authentication.

    Attributes:
        company_id (int): The identifier for the company.   Example value:1
        division_id (int): The identifier for the division.  Example value:1
        department_id (int): The identifier for the department.  Example
            value:0

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "company_id": 'companyId',
        "division_id": 'divisionId',
        "department_id": 'departmentId'
    }

    _optionals = [
        'division_id',
        'department_id',
    ]

    def __init__(self,
                 company_id=None,
                 division_id=APIHelper.SKIP,
                 department_id=APIHelper.SKIP):
        """Constructor for the LISAuthenticationRequest class"""

        # Initialize members of the class
        self.company_id = company_id 
        if division_id is not APIHelper.SKIP:
            self.division_id = division_id 
        if department_id is not APIHelper.SKIP:
            self.department_id = department_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        company_id = dictionary.get("companyId") if dictionary.get("companyId") else None
        division_id = dictionary.get("divisionId") if dictionary.get("divisionId") else APIHelper.SKIP
        department_id = dictionary.get("departmentId") if dictionary.get("departmentId") else APIHelper.SKIP
        # Return an object of this model
        return cls(company_id,
                   division_id,
                   department_id)
