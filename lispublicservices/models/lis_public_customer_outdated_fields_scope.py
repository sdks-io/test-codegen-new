# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerOutdatedFieldsScope(object):

    """Implementation of the 'LISPublicCustomerOutdatedFieldsScope' model.

    The LISCustomerOutdatedFieldsScope data contract.

    Attributes:
        commercial_carrier (bool): Gets or sets CommercialCarrier.
        credit_freight_payer_optimization_code
            (CreditFreightPayerOptimizationCodeEnum): Gets or sets
            CreditFreightPayerOptimizationCode.
        debit_freight_payer_optimization_code
            (DebitFreightPayerOptimizationCodeEnum): Gets or sets
            DebitFreightPayerOptimizationCode.
        debit_show_total_amount_in_euro (bool): Gets or sets
            DebitShowTotalAmountInEuro.
        credit_show_total_amount_in_euro (bool): Gets or sets
            CreditShowTotalAmountInEuro.
        debit_print_fly_leaf (bool): Gets or sets DebitPrintFlyLeaf.
        credit_print_fly_leaf (bool): Gets or sets CreditPrintFlyLeaf.
        separate_local_and_long_distance_traffic (bool): Gets or sets
            SeparateLocalAndLongDistanceTraffic.
        incoming_invoice_activated_country_codes (list of string): Gets or
            sets IncomingInvoiceActivatedCountryCodes.
        net_target_days (int): Gets or sets NetTargetDays.
        cashback_target_days (int): Gets or sets CashbackTargetDays.
        cashback_percentage (float): Gets or sets CashbackPercentage.
        company_group (int): Gets or sets CompanyGroup.
        company (int): Gets or sets Company.
        division (int): Gets or sets Division.
        track_changes (bool): Gets or sets TrackChanges.
        has_changes (bool): Gets or sets HasChanges.
        gft_tariff_valid_date (datetime): Gets or sets the GFT tariff valid
            date.
        kds_tariff_valid_date (datetime): Gets or sets the KDS tariff valid
            date.
        in_house_freight_tariff_valid_date (datetime): Gets or sets the in
            house freight tariff valid date.
        foreign_object_calculation_base (ForeignObjectCalculationBaseEnum):
            Gets or sets the foreign calculation base.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "commercial_carrier": 'commercialCarrier',
        "credit_freight_payer_optimization_code": 'creditFreightPayerOptimizationCode',
        "debit_freight_payer_optimization_code": 'debitFreightPayerOptimizationCode',
        "debit_show_total_amount_in_euro": 'debitShowTotalAmountInEuro',
        "credit_show_total_amount_in_euro": 'creditShowTotalAmountInEuro',
        "debit_print_fly_leaf": 'debitPrintFlyLeaf',
        "credit_print_fly_leaf": 'creditPrintFlyLeaf',
        "separate_local_and_long_distance_traffic": 'separateLocalAndLongDistanceTraffic',
        "incoming_invoice_activated_country_codes": 'incomingInvoiceActivatedCountryCodes',
        "net_target_days": 'netTargetDays',
        "cashback_target_days": 'cashbackTargetDays',
        "cashback_percentage": 'cashbackPercentage',
        "company_group": 'companyGroup',
        "company": 'company',
        "division": 'division',
        "track_changes": 'trackChanges',
        "has_changes": 'hasChanges',
        "gft_tariff_valid_date": 'gftTariffValidDate',
        "kds_tariff_valid_date": 'kdsTariffValidDate',
        "in_house_freight_tariff_valid_date": 'inHouseFreightTariffValidDate',
        "foreign_object_calculation_base": 'foreignObjectCalculationBase'
    }

    _optionals = [
        'commercial_carrier',
        'credit_freight_payer_optimization_code',
        'debit_freight_payer_optimization_code',
        'debit_show_total_amount_in_euro',
        'credit_show_total_amount_in_euro',
        'debit_print_fly_leaf',
        'credit_print_fly_leaf',
        'separate_local_and_long_distance_traffic',
        'incoming_invoice_activated_country_codes',
        'net_target_days',
        'cashback_target_days',
        'cashback_percentage',
        'company_group',
        'company',
        'division',
        'track_changes',
        'has_changes',
        'gft_tariff_valid_date',
        'kds_tariff_valid_date',
        'in_house_freight_tariff_valid_date',
        'foreign_object_calculation_base',
    ]

    def __init__(self,
                 commercial_carrier=APIHelper.SKIP,
                 credit_freight_payer_optimization_code=APIHelper.SKIP,
                 debit_freight_payer_optimization_code=APIHelper.SKIP,
                 debit_show_total_amount_in_euro=APIHelper.SKIP,
                 credit_show_total_amount_in_euro=APIHelper.SKIP,
                 debit_print_fly_leaf=APIHelper.SKIP,
                 credit_print_fly_leaf=APIHelper.SKIP,
                 separate_local_and_long_distance_traffic=APIHelper.SKIP,
                 incoming_invoice_activated_country_codes=APIHelper.SKIP,
                 net_target_days=APIHelper.SKIP,
                 cashback_target_days=APIHelper.SKIP,
                 cashback_percentage=APIHelper.SKIP,
                 company_group=APIHelper.SKIP,
                 company=APIHelper.SKIP,
                 division=APIHelper.SKIP,
                 track_changes=APIHelper.SKIP,
                 has_changes=APIHelper.SKIP,
                 gft_tariff_valid_date=APIHelper.SKIP,
                 kds_tariff_valid_date=APIHelper.SKIP,
                 in_house_freight_tariff_valid_date=APIHelper.SKIP,
                 foreign_object_calculation_base=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerOutdatedFieldsScope class"""

        # Initialize members of the class
        if commercial_carrier is not APIHelper.SKIP:
            self.commercial_carrier = commercial_carrier 
        if credit_freight_payer_optimization_code is not APIHelper.SKIP:
            self.credit_freight_payer_optimization_code = credit_freight_payer_optimization_code 
        if debit_freight_payer_optimization_code is not APIHelper.SKIP:
            self.debit_freight_payer_optimization_code = debit_freight_payer_optimization_code 
        if debit_show_total_amount_in_euro is not APIHelper.SKIP:
            self.debit_show_total_amount_in_euro = debit_show_total_amount_in_euro 
        if credit_show_total_amount_in_euro is not APIHelper.SKIP:
            self.credit_show_total_amount_in_euro = credit_show_total_amount_in_euro 
        if debit_print_fly_leaf is not APIHelper.SKIP:
            self.debit_print_fly_leaf = debit_print_fly_leaf 
        if credit_print_fly_leaf is not APIHelper.SKIP:
            self.credit_print_fly_leaf = credit_print_fly_leaf 
        if separate_local_and_long_distance_traffic is not APIHelper.SKIP:
            self.separate_local_and_long_distance_traffic = separate_local_and_long_distance_traffic 
        if incoming_invoice_activated_country_codes is not APIHelper.SKIP:
            self.incoming_invoice_activated_country_codes = incoming_invoice_activated_country_codes 
        if net_target_days is not APIHelper.SKIP:
            self.net_target_days = net_target_days 
        if cashback_target_days is not APIHelper.SKIP:
            self.cashback_target_days = cashback_target_days 
        if cashback_percentage is not APIHelper.SKIP:
            self.cashback_percentage = cashback_percentage 
        if company_group is not APIHelper.SKIP:
            self.company_group = company_group 
        if company is not APIHelper.SKIP:
            self.company = company 
        if division is not APIHelper.SKIP:
            self.division = division 
        if track_changes is not APIHelper.SKIP:
            self.track_changes = track_changes 
        if has_changes is not APIHelper.SKIP:
            self.has_changes = has_changes 
        if gft_tariff_valid_date is not APIHelper.SKIP:
            self.gft_tariff_valid_date = APIHelper.RFC3339DateTime(gft_tariff_valid_date) if gft_tariff_valid_date else None 
        if kds_tariff_valid_date is not APIHelper.SKIP:
            self.kds_tariff_valid_date = APIHelper.RFC3339DateTime(kds_tariff_valid_date) if kds_tariff_valid_date else None 
        if in_house_freight_tariff_valid_date is not APIHelper.SKIP:
            self.in_house_freight_tariff_valid_date = APIHelper.RFC3339DateTime(in_house_freight_tariff_valid_date) if in_house_freight_tariff_valid_date else None 
        if foreign_object_calculation_base is not APIHelper.SKIP:
            self.foreign_object_calculation_base = foreign_object_calculation_base 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        commercial_carrier = dictionary.get("commercialCarrier") if "commercialCarrier" in dictionary.keys() else APIHelper.SKIP
        credit_freight_payer_optimization_code = dictionary.get("creditFreightPayerOptimizationCode") if dictionary.get("creditFreightPayerOptimizationCode") else APIHelper.SKIP
        debit_freight_payer_optimization_code = dictionary.get("debitFreightPayerOptimizationCode") if dictionary.get("debitFreightPayerOptimizationCode") else APIHelper.SKIP
        debit_show_total_amount_in_euro = dictionary.get("debitShowTotalAmountInEuro") if "debitShowTotalAmountInEuro" in dictionary.keys() else APIHelper.SKIP
        credit_show_total_amount_in_euro = dictionary.get("creditShowTotalAmountInEuro") if "creditShowTotalAmountInEuro" in dictionary.keys() else APIHelper.SKIP
        debit_print_fly_leaf = dictionary.get("debitPrintFlyLeaf") if "debitPrintFlyLeaf" in dictionary.keys() else APIHelper.SKIP
        credit_print_fly_leaf = dictionary.get("creditPrintFlyLeaf") if "creditPrintFlyLeaf" in dictionary.keys() else APIHelper.SKIP
        separate_local_and_long_distance_traffic = dictionary.get("separateLocalAndLongDistanceTraffic") if "separateLocalAndLongDistanceTraffic" in dictionary.keys() else APIHelper.SKIP
        incoming_invoice_activated_country_codes = dictionary.get("incomingInvoiceActivatedCountryCodes") if dictionary.get("incomingInvoiceActivatedCountryCodes") else APIHelper.SKIP
        net_target_days = dictionary.get("netTargetDays") if dictionary.get("netTargetDays") else APIHelper.SKIP
        cashback_target_days = dictionary.get("cashbackTargetDays") if dictionary.get("cashbackTargetDays") else APIHelper.SKIP
        cashback_percentage = dictionary.get("cashbackPercentage") if dictionary.get("cashbackPercentage") else APIHelper.SKIP
        company_group = dictionary.get("companyGroup") if dictionary.get("companyGroup") else APIHelper.SKIP
        company = dictionary.get("company") if dictionary.get("company") else APIHelper.SKIP
        division = dictionary.get("division") if dictionary.get("division") else APIHelper.SKIP
        track_changes = dictionary.get("trackChanges") if "trackChanges" in dictionary.keys() else APIHelper.SKIP
        has_changes = dictionary.get("hasChanges") if "hasChanges" in dictionary.keys() else APIHelper.SKIP
        gft_tariff_valid_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("gftTariffValidDate")).datetime if dictionary.get("gftTariffValidDate") else APIHelper.SKIP
        kds_tariff_valid_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("kdsTariffValidDate")).datetime if dictionary.get("kdsTariffValidDate") else APIHelper.SKIP
        in_house_freight_tariff_valid_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("inHouseFreightTariffValidDate")).datetime if dictionary.get("inHouseFreightTariffValidDate") else APIHelper.SKIP
        foreign_object_calculation_base = dictionary.get("foreignObjectCalculationBase") if dictionary.get("foreignObjectCalculationBase") else APIHelper.SKIP
        # Return an object of this model
        return cls(commercial_carrier,
                   credit_freight_payer_optimization_code,
                   debit_freight_payer_optimization_code,
                   debit_show_total_amount_in_euro,
                   credit_show_total_amount_in_euro,
                   debit_print_fly_leaf,
                   credit_print_fly_leaf,
                   separate_local_and_long_distance_traffic,
                   incoming_invoice_activated_country_codes,
                   net_target_days,
                   cashback_target_days,
                   cashback_percentage,
                   company_group,
                   company,
                   division,
                   track_changes,
                   has_changes,
                   gft_tariff_valid_date,
                   kds_tariff_valid_date,
                   in_house_freight_tariff_valid_date,
                   foreign_object_calculation_base)
