# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISCustomerAccountNumber(object):

    """Implementation of the 'LISCustomerAccountNumber' model.

    TODO: type model description here.

    Attributes:
        company_id (int): TODO: type description here.
        division_id (int): TODO: type description here.
        account_number (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "company_id": 'companyId',
        "division_id": 'divisionId',
        "account_number": 'accountNumber'
    }

    _optionals = [
        'company_id',
        'division_id',
        'account_number',
    ]

    def __init__(self,
                 company_id=APIHelper.SKIP,
                 division_id=APIHelper.SKIP,
                 account_number=APIHelper.SKIP):
        """Constructor for the LISCustomerAccountNumber class"""

        # Initialize members of the class
        if company_id is not APIHelper.SKIP:
            self.company_id = company_id 
        if division_id is not APIHelper.SKIP:
            self.division_id = division_id 
        if account_number is not APIHelper.SKIP:
            self.account_number = account_number 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        company_id = dictionary.get("companyId") if dictionary.get("companyId") else APIHelper.SKIP
        division_id = dictionary.get("divisionId") if dictionary.get("divisionId") else APIHelper.SKIP
        account_number = dictionary.get("accountNumber") if dictionary.get("accountNumber") else APIHelper.SKIP
        # Return an object of this model
        return cls(company_id,
                   division_id,
                   account_number)
