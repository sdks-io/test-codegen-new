# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicCustomerSlipFee(object):

    """Implementation of the 'LISPublicCustomerSlipFee' model.

    Represents an entity class. This class depends on the database table
    #*KunBelG

    Attributes:
        customer_id (int): Gets or sets the CustomerId property. This property
            depends on the database field KundenNr.
        slip_fee_id (int): Gets or sets the SlipFeeId property. This property
            depends on the database field BelGebNr.
        calculation_base (CalculationBaseEnum): Gets or sets the
            CalculationBase property. This property depends on the database
            field GueltigF.
        changed_on (datetime): Gets or sets the ChangedOn property. This
            property depends on the database field AendDat.
        changed_by (string): Gets or sets the ChangedBy property. This
            property depends on the database field AendUs.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "customer_id": 'customerId',
        "slip_fee_id": 'slipFeeId',
        "calculation_base": 'calculationBase',
        "changed_on": 'changedOn',
        "changed_by": 'changedBy'
    }

    _optionals = [
        'customer_id',
        'slip_fee_id',
        'calculation_base',
        'changed_on',
        'changed_by',
    ]

    def __init__(self,
                 customer_id=APIHelper.SKIP,
                 slip_fee_id=APIHelper.SKIP,
                 calculation_base=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerSlipFee class"""

        # Initialize members of the class
        if customer_id is not APIHelper.SKIP:
            self.customer_id = customer_id 
        if slip_fee_id is not APIHelper.SKIP:
            self.slip_fee_id = slip_fee_id 
        if calculation_base is not APIHelper.SKIP:
            self.calculation_base = calculation_base 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        customer_id = dictionary.get("customerId") if dictionary.get("customerId") else APIHelper.SKIP
        slip_fee_id = dictionary.get("slipFeeId") if dictionary.get("slipFeeId") else APIHelper.SKIP
        calculation_base = dictionary.get("calculationBase") if dictionary.get("calculationBase") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        # Return an object of this model
        return cls(customer_id,
                   slip_fee_id,
                   calculation_base,
                   changed_on,
                   changed_by)
