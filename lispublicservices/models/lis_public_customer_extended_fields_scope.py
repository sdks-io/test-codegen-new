# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper
from lispublicservices.models.lis_public_extended_data_table_record import LISPublicExtendedDataTableRecord


class LISPublicCustomerExtendedFieldsScope(object):

    """Implementation of the 'LISPublicCustomerExtendedFieldsScope' model.

    LISCustomerExtendedFieldsScope data contract.

    Attributes:
        extended_fields (LISPublicExtendedDataTableRecord): This class
            represents a row within an extended table. Therefor it holds a 
            collection of
            {LIS.NetSped.PublicServiceLayer.Models.Customer.ExtTables.LISPublic
            ExtendedDataField}.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "extended_fields": 'extendedFields'
    }

    _optionals = [
        'extended_fields',
    ]

    def __init__(self,
                 extended_fields=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerExtendedFieldsScope class"""

        # Initialize members of the class
        if extended_fields is not APIHelper.SKIP:
            self.extended_fields = extended_fields 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        extended_fields = LISPublicExtendedDataTableRecord.from_dictionary(dictionary.get('extendedFields')) if 'extendedFields' in dictionary.keys() else APIHelper.SKIP
        # Return an object of this model
        return cls(extended_fields)
