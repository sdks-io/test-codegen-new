# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper
from lispublicservices.models.lis_public_customer_hazardous_goods_class import LISPublicCustomerHazardousGoodsClass


class LISPublicCustomerHazardousGoodsScope(object):

    """Implementation of the 'LISPublicCustomerHazardousGoodsScope' model.

    LISCustomerHazardousGoodsScope

    Attributes:
        hazardous_goods_blocked (bool): Gets or sets a value indicating
            whether [hazardous goods blocked].
        hazardous_goods_classes (list of
            LISPublicCustomerHazardousGoodsClass): Gets or sets the hazardous
            goods classes.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "hazardous_goods_blocked": 'hazardousGoodsBlocked',
        "hazardous_goods_classes": 'hazardousGoodsClasses'
    }

    _optionals = [
        'hazardous_goods_blocked',
        'hazardous_goods_classes',
    ]

    def __init__(self,
                 hazardous_goods_blocked=APIHelper.SKIP,
                 hazardous_goods_classes=APIHelper.SKIP):
        """Constructor for the LISPublicCustomerHazardousGoodsScope class"""

        # Initialize members of the class
        if hazardous_goods_blocked is not APIHelper.SKIP:
            self.hazardous_goods_blocked = hazardous_goods_blocked 
        if hazardous_goods_classes is not APIHelper.SKIP:
            self.hazardous_goods_classes = hazardous_goods_classes 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        hazardous_goods_blocked = dictionary.get("hazardousGoodsBlocked") if "hazardousGoodsBlocked" in dictionary.keys() else APIHelper.SKIP
        hazardous_goods_classes = None
        if dictionary.get('hazardousGoodsClasses') is not None:
            hazardous_goods_classes = [LISPublicCustomerHazardousGoodsClass.from_dictionary(x) for x in dictionary.get('hazardousGoodsClasses')]
        else:
            hazardous_goods_classes = APIHelper.SKIP
        # Return an object of this model
        return cls(hazardous_goods_blocked,
                   hazardous_goods_classes)
