# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper
from lispublicservices.models.lis_public_extended_data_table_record import LISPublicExtendedDataTableRecord
from lispublicservices.models.lis_public_language_item_container import LISPublicLanguageItemContainer


class LISPublicUnit(object):

    """Implementation of the 'LISPublicUnit' model.

    Data contract for a unit.

    Attributes:
        unit_id (string): Gets or sets the unit id.
        desc_sing (string): Gets or sets the desc sing.
        desc_plural (string): Gets or sets the desc plural.
        description (string): Gets or sets the description.
        changed_on (datetime): Gets or sets the date of the last change to
            this item.
        changed_by (string): Gets or sets the name of the user that made the
            last change to this item.
        self_weight (float): Gets or sets the self weight.
        load_dev_booking (bool): Gets or sets the load dev booking.
        load_dev_reference (string): Gets or sets the load dev reference.
        load_dev_conversion_factor (float): Gets or sets the load dev
            conversion factor.
        load_dev_base_price (float): Gets or sets the load dev base price.
        load_dev_sales_price (float): Gets or sets the load dev sales price.
        load_dev_print_accompanying_letter (bool): Gets or sets the load dev
            print accompanying letter.
        exchange_price (float): Gets or sets the exchange price.
        length (float): Gets or sets the length.
        width (float): Gets or sets the width.
        height (float): Gets or sets the height.
        load_dev_sort (int): Gets or sets the load dev sort.
        load_dev_customer_id (int): Gets or sets the load dev customer id.
        load_dev_debiting_account (LoadDevDebitingAccountEnum): Gets or sets
            the load dev debiting account.
        square_meter_per_loading_meter (float): Gets or sets the square meter
            per loading meter.
        heavy_cargo_factor_1 (float): Gets or sets the heavy cargo factor1.
        heavy_cargo_factor_starts_on_1 (datetime): Gets or sets the heavy
            cargo factor starts on1.
        heavy_cargo_factor_2 (float): Gets or sets the heavy cargo factor2.
        heavy_cargo_factor_starts_on_2 (datetime): Gets or sets the heavy
            cargo factor starts on2.
        load_dev_crediting_account (LoadDevCreditingAccountEnum): Gets or sets
            the load dev crediting account.
        full_height (float): Gets or sets the full height.
        iso_code (string): Gets or sets the ISO code.
        tare_weight (float): Gets or sets the tare weight.
        stackable (bool): Gets or sets the stackable.
        load_dev_fortras_id (LoadDevFortrasIdEnum): Gets or sets the load dev
            fortras id.
        adr_package_type (int): Gets or sets the type of the ADR package.
        adr_description (string): Gets or sets the ADR description.
        filling_degree (float): Gets or sets the filling degree.
        container_lease_price (float): Gets or sets ContainerLeasePrice.
        container_description (string): Gets or sets ContainerDescription.
        desc_sing_container (LISPublicLanguageItemContainer): TODO: type
            description here.
        desc_plural_container (LISPublicLanguageItemContainer): TODO: type
            description here.
        description_container (LISPublicLanguageItemContainer): TODO: type
            description here.
        at_scanner (bool): Gets or sets a value indicating whether [at
            scanner].
        hotkey (HotkeyEnum): Gets or sets the hotkey.
        at_package (bool): Gets or sets a value indicating whether [at
            scanner].
        at_quantity (bool): Gets or sets a value indicating whether [at
            scanner].
        at_additional_loading_unit (bool): Gets or sets a value indicating
            whether [at scanner].
        extended_fields (LISPublicExtendedDataTableRecord): This class
            represents a row within an extended table. Therefor it holds a 
            collection of
            {LIS.NetSped.PublicServiceLayer.Models.Customer.ExtTables.LISPublic
            ExtendedDataField}.
        is_new (bool): Gets or sets a value indicating whether this entity
            will be inserted or updated.
        original_hash_snapshot (string): Gets or sets the original hash
            snapshot.
        original_snapshot (string): Gets or sets the original snapshot.
        current_snapshot (string): Gets or sets the current snapshot.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "unit_id": 'unitId',
        "desc_sing": 'descSing',
        "desc_plural": 'descPlural',
        "description": 'description',
        "changed_on": 'changedOn',
        "changed_by": 'changedBy',
        "self_weight": 'selfWeight',
        "load_dev_booking": 'loadDevBooking',
        "load_dev_reference": 'loadDevReference',
        "load_dev_conversion_factor": 'loadDevConversionFactor',
        "load_dev_base_price": 'loadDevBasePrice',
        "load_dev_sales_price": 'loadDevSalesPrice',
        "load_dev_print_accompanying_letter": 'loadDevPrintAccompanyingLetter',
        "exchange_price": 'exchangePrice',
        "length": 'length',
        "width": 'width',
        "height": 'height',
        "load_dev_sort": 'loadDevSort',
        "load_dev_customer_id": 'loadDevCustomerId',
        "load_dev_debiting_account": 'loadDevDebitingAccount',
        "square_meter_per_loading_meter": 'squareMeterPerLoadingMeter',
        "heavy_cargo_factor_1": 'heavyCargoFactor1',
        "heavy_cargo_factor_starts_on_1": 'heavyCargoFactorStartsOn1',
        "heavy_cargo_factor_2": 'heavyCargoFactor2',
        "heavy_cargo_factor_starts_on_2": 'heavyCargoFactorStartsOn2',
        "load_dev_crediting_account": 'loadDevCreditingAccount',
        "full_height": 'fullHeight',
        "iso_code": 'isoCode',
        "tare_weight": 'tareWeight',
        "stackable": 'stackable',
        "load_dev_fortras_id": 'loadDevFortrasId',
        "adr_package_type": 'adrPackageType',
        "adr_description": 'adrDescription',
        "filling_degree": 'fillingDegree',
        "container_lease_price": 'containerLeasePrice',
        "container_description": 'containerDescription',
        "desc_sing_container": 'descSingContainer',
        "desc_plural_container": 'descPluralContainer',
        "description_container": 'descriptionContainer',
        "at_scanner": 'atScanner',
        "hotkey": 'hotkey',
        "at_package": 'atPackage',
        "at_quantity": 'atQuantity',
        "at_additional_loading_unit": 'atAdditionalLoadingUnit',
        "extended_fields": 'extendedFields',
        "is_new": 'isNew',
        "original_hash_snapshot": 'originalHashSnapshot',
        "original_snapshot": 'originalSnapshot',
        "current_snapshot": 'currentSnapshot'
    }

    _optionals = [
        'unit_id',
        'desc_sing',
        'desc_plural',
        'description',
        'changed_on',
        'changed_by',
        'self_weight',
        'load_dev_booking',
        'load_dev_reference',
        'load_dev_conversion_factor',
        'load_dev_base_price',
        'load_dev_sales_price',
        'load_dev_print_accompanying_letter',
        'exchange_price',
        'length',
        'width',
        'height',
        'load_dev_sort',
        'load_dev_customer_id',
        'load_dev_debiting_account',
        'square_meter_per_loading_meter',
        'heavy_cargo_factor_1',
        'heavy_cargo_factor_starts_on_1',
        'heavy_cargo_factor_2',
        'heavy_cargo_factor_starts_on_2',
        'load_dev_crediting_account',
        'full_height',
        'iso_code',
        'tare_weight',
        'stackable',
        'load_dev_fortras_id',
        'adr_package_type',
        'adr_description',
        'filling_degree',
        'container_lease_price',
        'container_description',
        'desc_sing_container',
        'desc_plural_container',
        'description_container',
        'at_scanner',
        'hotkey',
        'at_package',
        'at_quantity',
        'at_additional_loading_unit',
        'extended_fields',
        'is_new',
        'original_hash_snapshot',
        'original_snapshot',
        'current_snapshot',
    ]

    def __init__(self,
                 unit_id=APIHelper.SKIP,
                 desc_sing=APIHelper.SKIP,
                 desc_plural=APIHelper.SKIP,
                 description=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP,
                 self_weight=APIHelper.SKIP,
                 load_dev_booking=APIHelper.SKIP,
                 load_dev_reference=APIHelper.SKIP,
                 load_dev_conversion_factor=APIHelper.SKIP,
                 load_dev_base_price=APIHelper.SKIP,
                 load_dev_sales_price=APIHelper.SKIP,
                 load_dev_print_accompanying_letter=APIHelper.SKIP,
                 exchange_price=APIHelper.SKIP,
                 length=APIHelper.SKIP,
                 width=APIHelper.SKIP,
                 height=APIHelper.SKIP,
                 load_dev_sort=APIHelper.SKIP,
                 load_dev_customer_id=APIHelper.SKIP,
                 load_dev_debiting_account=APIHelper.SKIP,
                 square_meter_per_loading_meter=APIHelper.SKIP,
                 heavy_cargo_factor_1=APIHelper.SKIP,
                 heavy_cargo_factor_starts_on_1=APIHelper.SKIP,
                 heavy_cargo_factor_2=APIHelper.SKIP,
                 heavy_cargo_factor_starts_on_2=APIHelper.SKIP,
                 load_dev_crediting_account=APIHelper.SKIP,
                 full_height=APIHelper.SKIP,
                 iso_code=APIHelper.SKIP,
                 tare_weight=APIHelper.SKIP,
                 stackable=APIHelper.SKIP,
                 load_dev_fortras_id=APIHelper.SKIP,
                 adr_package_type=APIHelper.SKIP,
                 adr_description=APIHelper.SKIP,
                 filling_degree=APIHelper.SKIP,
                 container_lease_price=APIHelper.SKIP,
                 container_description=APIHelper.SKIP,
                 desc_sing_container=APIHelper.SKIP,
                 desc_plural_container=APIHelper.SKIP,
                 description_container=APIHelper.SKIP,
                 at_scanner=APIHelper.SKIP,
                 hotkey=APIHelper.SKIP,
                 at_package=APIHelper.SKIP,
                 at_quantity=APIHelper.SKIP,
                 at_additional_loading_unit=APIHelper.SKIP,
                 extended_fields=APIHelper.SKIP,
                 is_new=APIHelper.SKIP,
                 original_hash_snapshot=APIHelper.SKIP,
                 original_snapshot=APIHelper.SKIP,
                 current_snapshot=APIHelper.SKIP):
        """Constructor for the LISPublicUnit class"""

        # Initialize members of the class
        if unit_id is not APIHelper.SKIP:
            self.unit_id = unit_id 
        if desc_sing is not APIHelper.SKIP:
            self.desc_sing = desc_sing 
        if desc_plural is not APIHelper.SKIP:
            self.desc_plural = desc_plural 
        if description is not APIHelper.SKIP:
            self.description = description 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 
        if self_weight is not APIHelper.SKIP:
            self.self_weight = self_weight 
        if load_dev_booking is not APIHelper.SKIP:
            self.load_dev_booking = load_dev_booking 
        if load_dev_reference is not APIHelper.SKIP:
            self.load_dev_reference = load_dev_reference 
        if load_dev_conversion_factor is not APIHelper.SKIP:
            self.load_dev_conversion_factor = load_dev_conversion_factor 
        if load_dev_base_price is not APIHelper.SKIP:
            self.load_dev_base_price = load_dev_base_price 
        if load_dev_sales_price is not APIHelper.SKIP:
            self.load_dev_sales_price = load_dev_sales_price 
        if load_dev_print_accompanying_letter is not APIHelper.SKIP:
            self.load_dev_print_accompanying_letter = load_dev_print_accompanying_letter 
        if exchange_price is not APIHelper.SKIP:
            self.exchange_price = exchange_price 
        if length is not APIHelper.SKIP:
            self.length = length 
        if width is not APIHelper.SKIP:
            self.width = width 
        if height is not APIHelper.SKIP:
            self.height = height 
        if load_dev_sort is not APIHelper.SKIP:
            self.load_dev_sort = load_dev_sort 
        if load_dev_customer_id is not APIHelper.SKIP:
            self.load_dev_customer_id = load_dev_customer_id 
        if load_dev_debiting_account is not APIHelper.SKIP:
            self.load_dev_debiting_account = load_dev_debiting_account 
        if square_meter_per_loading_meter is not APIHelper.SKIP:
            self.square_meter_per_loading_meter = square_meter_per_loading_meter 
        if heavy_cargo_factor_1 is not APIHelper.SKIP:
            self.heavy_cargo_factor_1 = heavy_cargo_factor_1 
        if heavy_cargo_factor_starts_on_1 is not APIHelper.SKIP:
            self.heavy_cargo_factor_starts_on_1 = APIHelper.RFC3339DateTime(heavy_cargo_factor_starts_on_1) if heavy_cargo_factor_starts_on_1 else None 
        if heavy_cargo_factor_2 is not APIHelper.SKIP:
            self.heavy_cargo_factor_2 = heavy_cargo_factor_2 
        if heavy_cargo_factor_starts_on_2 is not APIHelper.SKIP:
            self.heavy_cargo_factor_starts_on_2 = APIHelper.RFC3339DateTime(heavy_cargo_factor_starts_on_2) if heavy_cargo_factor_starts_on_2 else None 
        if load_dev_crediting_account is not APIHelper.SKIP:
            self.load_dev_crediting_account = load_dev_crediting_account 
        if full_height is not APIHelper.SKIP:
            self.full_height = full_height 
        if iso_code is not APIHelper.SKIP:
            self.iso_code = iso_code 
        if tare_weight is not APIHelper.SKIP:
            self.tare_weight = tare_weight 
        if stackable is not APIHelper.SKIP:
            self.stackable = stackable 
        if load_dev_fortras_id is not APIHelper.SKIP:
            self.load_dev_fortras_id = load_dev_fortras_id 
        if adr_package_type is not APIHelper.SKIP:
            self.adr_package_type = adr_package_type 
        if adr_description is not APIHelper.SKIP:
            self.adr_description = adr_description 
        if filling_degree is not APIHelper.SKIP:
            self.filling_degree = filling_degree 
        if container_lease_price is not APIHelper.SKIP:
            self.container_lease_price = container_lease_price 
        if container_description is not APIHelper.SKIP:
            self.container_description = container_description 
        if desc_sing_container is not APIHelper.SKIP:
            self.desc_sing_container = desc_sing_container 
        if desc_plural_container is not APIHelper.SKIP:
            self.desc_plural_container = desc_plural_container 
        if description_container is not APIHelper.SKIP:
            self.description_container = description_container 
        if at_scanner is not APIHelper.SKIP:
            self.at_scanner = at_scanner 
        if hotkey is not APIHelper.SKIP:
            self.hotkey = hotkey 
        if at_package is not APIHelper.SKIP:
            self.at_package = at_package 
        if at_quantity is not APIHelper.SKIP:
            self.at_quantity = at_quantity 
        if at_additional_loading_unit is not APIHelper.SKIP:
            self.at_additional_loading_unit = at_additional_loading_unit 
        if extended_fields is not APIHelper.SKIP:
            self.extended_fields = extended_fields 
        if is_new is not APIHelper.SKIP:
            self.is_new = is_new 
        if original_hash_snapshot is not APIHelper.SKIP:
            self.original_hash_snapshot = original_hash_snapshot 
        if original_snapshot is not APIHelper.SKIP:
            self.original_snapshot = original_snapshot 
        if current_snapshot is not APIHelper.SKIP:
            self.current_snapshot = current_snapshot 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        unit_id = dictionary.get("unitId") if dictionary.get("unitId") else APIHelper.SKIP
        desc_sing = dictionary.get("descSing") if dictionary.get("descSing") else APIHelper.SKIP
        desc_plural = dictionary.get("descPlural") if dictionary.get("descPlural") else APIHelper.SKIP
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        self_weight = dictionary.get("selfWeight") if dictionary.get("selfWeight") else APIHelper.SKIP
        load_dev_booking = dictionary.get("loadDevBooking") if "loadDevBooking" in dictionary.keys() else APIHelper.SKIP
        load_dev_reference = dictionary.get("loadDevReference") if dictionary.get("loadDevReference") else APIHelper.SKIP
        load_dev_conversion_factor = dictionary.get("loadDevConversionFactor") if dictionary.get("loadDevConversionFactor") else APIHelper.SKIP
        load_dev_base_price = dictionary.get("loadDevBasePrice") if dictionary.get("loadDevBasePrice") else APIHelper.SKIP
        load_dev_sales_price = dictionary.get("loadDevSalesPrice") if dictionary.get("loadDevSalesPrice") else APIHelper.SKIP
        load_dev_print_accompanying_letter = dictionary.get("loadDevPrintAccompanyingLetter") if "loadDevPrintAccompanyingLetter" in dictionary.keys() else APIHelper.SKIP
        exchange_price = dictionary.get("exchangePrice") if dictionary.get("exchangePrice") else APIHelper.SKIP
        length = dictionary.get("length") if dictionary.get("length") else APIHelper.SKIP
        width = dictionary.get("width") if dictionary.get("width") else APIHelper.SKIP
        height = dictionary.get("height") if dictionary.get("height") else APIHelper.SKIP
        load_dev_sort = dictionary.get("loadDevSort") if dictionary.get("loadDevSort") else APIHelper.SKIP
        load_dev_customer_id = dictionary.get("loadDevCustomerId") if dictionary.get("loadDevCustomerId") else APIHelper.SKIP
        load_dev_debiting_account = dictionary.get("loadDevDebitingAccount") if dictionary.get("loadDevDebitingAccount") else APIHelper.SKIP
        square_meter_per_loading_meter = dictionary.get("squareMeterPerLoadingMeter") if dictionary.get("squareMeterPerLoadingMeter") else APIHelper.SKIP
        heavy_cargo_factor_1 = dictionary.get("heavyCargoFactor1") if dictionary.get("heavyCargoFactor1") else APIHelper.SKIP
        heavy_cargo_factor_starts_on_1 = APIHelper.RFC3339DateTime.from_value(dictionary.get("heavyCargoFactorStartsOn1")).datetime if dictionary.get("heavyCargoFactorStartsOn1") else APIHelper.SKIP
        heavy_cargo_factor_2 = dictionary.get("heavyCargoFactor2") if dictionary.get("heavyCargoFactor2") else APIHelper.SKIP
        heavy_cargo_factor_starts_on_2 = APIHelper.RFC3339DateTime.from_value(dictionary.get("heavyCargoFactorStartsOn2")).datetime if dictionary.get("heavyCargoFactorStartsOn2") else APIHelper.SKIP
        load_dev_crediting_account = dictionary.get("loadDevCreditingAccount") if dictionary.get("loadDevCreditingAccount") else APIHelper.SKIP
        full_height = dictionary.get("fullHeight") if dictionary.get("fullHeight") else APIHelper.SKIP
        iso_code = dictionary.get("isoCode") if dictionary.get("isoCode") else APIHelper.SKIP
        tare_weight = dictionary.get("tareWeight") if dictionary.get("tareWeight") else APIHelper.SKIP
        stackable = dictionary.get("stackable") if "stackable" in dictionary.keys() else APIHelper.SKIP
        load_dev_fortras_id = dictionary.get("loadDevFortrasId") if dictionary.get("loadDevFortrasId") else APIHelper.SKIP
        adr_package_type = dictionary.get("adrPackageType") if dictionary.get("adrPackageType") else APIHelper.SKIP
        adr_description = dictionary.get("adrDescription") if dictionary.get("adrDescription") else APIHelper.SKIP
        filling_degree = dictionary.get("fillingDegree") if dictionary.get("fillingDegree") else APIHelper.SKIP
        container_lease_price = dictionary.get("containerLeasePrice") if dictionary.get("containerLeasePrice") else APIHelper.SKIP
        container_description = dictionary.get("containerDescription") if dictionary.get("containerDescription") else APIHelper.SKIP
        desc_sing_container = LISPublicLanguageItemContainer.from_dictionary(dictionary.get('descSingContainer')) if 'descSingContainer' in dictionary.keys() else APIHelper.SKIP
        desc_plural_container = LISPublicLanguageItemContainer.from_dictionary(dictionary.get('descPluralContainer')) if 'descPluralContainer' in dictionary.keys() else APIHelper.SKIP
        description_container = LISPublicLanguageItemContainer.from_dictionary(dictionary.get('descriptionContainer')) if 'descriptionContainer' in dictionary.keys() else APIHelper.SKIP
        at_scanner = dictionary.get("atScanner") if "atScanner" in dictionary.keys() else APIHelper.SKIP
        hotkey = dictionary.get("hotkey") if dictionary.get("hotkey") else APIHelper.SKIP
        at_package = dictionary.get("atPackage") if "atPackage" in dictionary.keys() else APIHelper.SKIP
        at_quantity = dictionary.get("atQuantity") if "atQuantity" in dictionary.keys() else APIHelper.SKIP
        at_additional_loading_unit = dictionary.get("atAdditionalLoadingUnit") if "atAdditionalLoadingUnit" in dictionary.keys() else APIHelper.SKIP
        extended_fields = LISPublicExtendedDataTableRecord.from_dictionary(dictionary.get('extendedFields')) if 'extendedFields' in dictionary.keys() else APIHelper.SKIP
        is_new = dictionary.get("isNew") if "isNew" in dictionary.keys() else APIHelper.SKIP
        original_hash_snapshot = dictionary.get("originalHashSnapshot") if dictionary.get("originalHashSnapshot") else APIHelper.SKIP
        original_snapshot = dictionary.get("originalSnapshot") if dictionary.get("originalSnapshot") else APIHelper.SKIP
        current_snapshot = dictionary.get("currentSnapshot") if dictionary.get("currentSnapshot") else APIHelper.SKIP
        # Return an object of this model
        return cls(unit_id,
                   desc_sing,
                   desc_plural,
                   description,
                   changed_on,
                   changed_by,
                   self_weight,
                   load_dev_booking,
                   load_dev_reference,
                   load_dev_conversion_factor,
                   load_dev_base_price,
                   load_dev_sales_price,
                   load_dev_print_accompanying_letter,
                   exchange_price,
                   length,
                   width,
                   height,
                   load_dev_sort,
                   load_dev_customer_id,
                   load_dev_debiting_account,
                   square_meter_per_loading_meter,
                   heavy_cargo_factor_1,
                   heavy_cargo_factor_starts_on_1,
                   heavy_cargo_factor_2,
                   heavy_cargo_factor_starts_on_2,
                   load_dev_crediting_account,
                   full_height,
                   iso_code,
                   tare_weight,
                   stackable,
                   load_dev_fortras_id,
                   adr_package_type,
                   adr_description,
                   filling_degree,
                   container_lease_price,
                   container_description,
                   desc_sing_container,
                   desc_plural_container,
                   description_container,
                   at_scanner,
                   hotkey,
                   at_package,
                   at_quantity,
                   at_additional_loading_unit,
                   extended_fields,
                   is_new,
                   original_hash_snapshot,
                   original_snapshot,
                   current_snapshot)
