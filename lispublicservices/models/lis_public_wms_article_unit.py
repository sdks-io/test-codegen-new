# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicWMSArticleUnit(object):

    """Implementation of the 'LISPublicWMSArticleUnit' model.

    The LISArticleUnit data contract.

    Attributes:
        article_id (int): Gets or sets ArticleId.
        article_unit_id (int): Gets or sets ArticleUnitId.
        company_id (int): Gets or sets CompanyId.
        changed_by (string): Gets or sets ChangedBy.
        changed_on (datetime): Gets or sets ChangedOn.
        created_by (string): Gets or sets ChangedBy.
        created_on (datetime): Gets or sets ChangedOn.
        base_factor (float): Gets or sets BaseFactor.
        iso_unit (string): Gets or sets IsoUnit.
        unit (string): Gets or sets Unit.
        bin_type_id (int): Gets or sets BinTypeId.
        gross_weight (float): Gets or sets Grossweight.
        net_weight (float): Gets or sets Netweight.
        length (float): Gets or sets Length.
        width (float): Gets or sets Width.
        height (float): Gets or sets Height.
        unit_type (UnitTypeEnum): Gets or sets UnitType.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "article_id": 'articleId',
        "article_unit_id": 'articleUnitId',
        "company_id": 'companyId',
        "changed_by": 'changedBy',
        "changed_on": 'changedOn',
        "created_by": 'createdBy',
        "created_on": 'createdOn',
        "base_factor": 'baseFactor',
        "iso_unit": 'isoUnit',
        "unit": 'unit',
        "bin_type_id": 'binTypeId',
        "gross_weight": 'grossWeight',
        "net_weight": 'netWeight',
        "length": 'length',
        "width": 'width',
        "height": 'height',
        "unit_type": 'unitType'
    }

    _optionals = [
        'article_id',
        'article_unit_id',
        'company_id',
        'changed_by',
        'changed_on',
        'created_by',
        'created_on',
        'base_factor',
        'iso_unit',
        'unit',
        'bin_type_id',
        'gross_weight',
        'net_weight',
        'length',
        'width',
        'height',
        'unit_type',
    ]

    def __init__(self,
                 article_id=APIHelper.SKIP,
                 article_unit_id=APIHelper.SKIP,
                 company_id=APIHelper.SKIP,
                 changed_by=APIHelper.SKIP,
                 changed_on=APIHelper.SKIP,
                 created_by=APIHelper.SKIP,
                 created_on=APIHelper.SKIP,
                 base_factor=APIHelper.SKIP,
                 iso_unit=APIHelper.SKIP,
                 unit=APIHelper.SKIP,
                 bin_type_id=APIHelper.SKIP,
                 gross_weight=APIHelper.SKIP,
                 net_weight=APIHelper.SKIP,
                 length=APIHelper.SKIP,
                 width=APIHelper.SKIP,
                 height=APIHelper.SKIP,
                 unit_type=APIHelper.SKIP):
        """Constructor for the LISPublicWMSArticleUnit class"""

        # Initialize members of the class
        if article_id is not APIHelper.SKIP:
            self.article_id = article_id 
        if article_unit_id is not APIHelper.SKIP:
            self.article_unit_id = article_unit_id 
        if company_id is not APIHelper.SKIP:
            self.company_id = company_id 
        if changed_by is not APIHelper.SKIP:
            self.changed_by = changed_by 
        if changed_on is not APIHelper.SKIP:
            self.changed_on = APIHelper.RFC3339DateTime(changed_on) if changed_on else None 
        if created_by is not APIHelper.SKIP:
            self.created_by = created_by 
        if created_on is not APIHelper.SKIP:
            self.created_on = APIHelper.RFC3339DateTime(created_on) if created_on else None 
        if base_factor is not APIHelper.SKIP:
            self.base_factor = base_factor 
        if iso_unit is not APIHelper.SKIP:
            self.iso_unit = iso_unit 
        if unit is not APIHelper.SKIP:
            self.unit = unit 
        if bin_type_id is not APIHelper.SKIP:
            self.bin_type_id = bin_type_id 
        if gross_weight is not APIHelper.SKIP:
            self.gross_weight = gross_weight 
        if net_weight is not APIHelper.SKIP:
            self.net_weight = net_weight 
        if length is not APIHelper.SKIP:
            self.length = length 
        if width is not APIHelper.SKIP:
            self.width = width 
        if height is not APIHelper.SKIP:
            self.height = height 
        if unit_type is not APIHelper.SKIP:
            self.unit_type = unit_type 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        article_id = dictionary.get("articleId") if dictionary.get("articleId") else APIHelper.SKIP
        article_unit_id = dictionary.get("articleUnitId") if dictionary.get("articleUnitId") else APIHelper.SKIP
        company_id = dictionary.get("companyId") if dictionary.get("companyId") else APIHelper.SKIP
        changed_by = dictionary.get("changedBy") if dictionary.get("changedBy") else APIHelper.SKIP
        changed_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("changedOn")).datetime if dictionary.get("changedOn") else APIHelper.SKIP
        created_by = dictionary.get("createdBy") if dictionary.get("createdBy") else APIHelper.SKIP
        created_on = APIHelper.RFC3339DateTime.from_value(dictionary.get("createdOn")).datetime if dictionary.get("createdOn") else APIHelper.SKIP
        base_factor = dictionary.get("baseFactor") if dictionary.get("baseFactor") else APIHelper.SKIP
        iso_unit = dictionary.get("isoUnit") if dictionary.get("isoUnit") else APIHelper.SKIP
        unit = dictionary.get("unit") if dictionary.get("unit") else APIHelper.SKIP
        bin_type_id = dictionary.get("binTypeId") if dictionary.get("binTypeId") else APIHelper.SKIP
        gross_weight = dictionary.get("grossWeight") if dictionary.get("grossWeight") else APIHelper.SKIP
        net_weight = dictionary.get("netWeight") if dictionary.get("netWeight") else APIHelper.SKIP
        length = dictionary.get("length") if dictionary.get("length") else APIHelper.SKIP
        width = dictionary.get("width") if dictionary.get("width") else APIHelper.SKIP
        height = dictionary.get("height") if dictionary.get("height") else APIHelper.SKIP
        unit_type = dictionary.get("unitType") if dictionary.get("unitType") else APIHelper.SKIP
        # Return an object of this model
        return cls(article_id,
                   article_unit_id,
                   company_id,
                   changed_by,
                   changed_on,
                   created_by,
                   created_on,
                   base_factor,
                   iso_unit,
                   unit,
                   bin_type_id,
                   gross_weight,
                   net_weight,
                   length,
                   width,
                   height,
                   unit_type)
