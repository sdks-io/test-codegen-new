# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from lispublicservices.api_helper import APIHelper


class LISPublicSpecialInvoicePosition(object):

    """Implementation of the 'LISPublicSpecialInvoicePosition' model.

    Position of a special invoice

    Attributes:
        description (string): Description for the special invoice position
        date_of_supply (datetime): Date of supply
        amount_net (float): Net amount
        amount_currency_id (string): Currency identifier of the amount
        sales_tax_id (string): Identifier of the sales tax
        account_table_sap (string): AccountTableSAP
        charge_id (int): Identifier of the charge
        cost_center_sap (string): CostCenterSAP
        cost_unit_sap (string): CostUnitSAP
        order_no (int): Number of the order
        tour_no (int): Number of the tour
        account_table (int): AccountTable
        cost_center (int): CostCenter
        cost_unit (int): CostUnit
        division_id (int): Identifier of the division
        department_id (int): Identifier of the department

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "date_of_supply": 'dateOfSupply',
        "amount_currency_id": 'amountCurrencyId',
        "sales_tax_id": 'salesTaxId',
        "description": 'description',
        "amount_net": 'amountNet',
        "account_table_sap": 'accountTableSAP',
        "charge_id": 'chargeId',
        "cost_center_sap": 'costCenterSAP',
        "cost_unit_sap": 'costUnitSAP',
        "order_no": 'orderNo',
        "tour_no": 'tourNo',
        "account_table": 'accountTable',
        "cost_center": 'costCenter',
        "cost_unit": 'costUnit',
        "division_id": 'divisionId',
        "department_id": 'departmentId'
    }

    _optionals = [
        'description',
        'amount_net',
        'account_table_sap',
        'charge_id',
        'cost_center_sap',
        'cost_unit_sap',
        'order_no',
        'tour_no',
        'account_table',
        'cost_center',
        'cost_unit',
        'division_id',
        'department_id',
    ]

    def __init__(self,
                 date_of_supply=None,
                 amount_currency_id=None,
                 sales_tax_id=None,
                 description=APIHelper.SKIP,
                 amount_net=APIHelper.SKIP,
                 account_table_sap=APIHelper.SKIP,
                 charge_id=APIHelper.SKIP,
                 cost_center_sap=APIHelper.SKIP,
                 cost_unit_sap=APIHelper.SKIP,
                 order_no=APIHelper.SKIP,
                 tour_no=APIHelper.SKIP,
                 account_table=APIHelper.SKIP,
                 cost_center=APIHelper.SKIP,
                 cost_unit=APIHelper.SKIP,
                 division_id=APIHelper.SKIP,
                 department_id=APIHelper.SKIP):
        """Constructor for the LISPublicSpecialInvoicePosition class"""

        # Initialize members of the class
        if description is not APIHelper.SKIP:
            self.description = description 
        self.date_of_supply = APIHelper.RFC3339DateTime(date_of_supply) if date_of_supply else None 
        if amount_net is not APIHelper.SKIP:
            self.amount_net = amount_net 
        self.amount_currency_id = amount_currency_id 
        self.sales_tax_id = sales_tax_id 
        if account_table_sap is not APIHelper.SKIP:
            self.account_table_sap = account_table_sap 
        if charge_id is not APIHelper.SKIP:
            self.charge_id = charge_id 
        if cost_center_sap is not APIHelper.SKIP:
            self.cost_center_sap = cost_center_sap 
        if cost_unit_sap is not APIHelper.SKIP:
            self.cost_unit_sap = cost_unit_sap 
        if order_no is not APIHelper.SKIP:
            self.order_no = order_no 
        if tour_no is not APIHelper.SKIP:
            self.tour_no = tour_no 
        if account_table is not APIHelper.SKIP:
            self.account_table = account_table 
        if cost_center is not APIHelper.SKIP:
            self.cost_center = cost_center 
        if cost_unit is not APIHelper.SKIP:
            self.cost_unit = cost_unit 
        if division_id is not APIHelper.SKIP:
            self.division_id = division_id 
        if department_id is not APIHelper.SKIP:
            self.department_id = department_id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        date_of_supply = APIHelper.RFC3339DateTime.from_value(dictionary.get("dateOfSupply")).datetime if dictionary.get("dateOfSupply") else None
        amount_currency_id = dictionary.get("amountCurrencyId") if dictionary.get("amountCurrencyId") else None
        sales_tax_id = dictionary.get("salesTaxId") if dictionary.get("salesTaxId") else None
        description = dictionary.get("description") if dictionary.get("description") else APIHelper.SKIP
        amount_net = dictionary.get("amountNet") if dictionary.get("amountNet") else APIHelper.SKIP
        account_table_sap = dictionary.get("accountTableSAP") if dictionary.get("accountTableSAP") else APIHelper.SKIP
        charge_id = dictionary.get("chargeId") if dictionary.get("chargeId") else APIHelper.SKIP
        cost_center_sap = dictionary.get("costCenterSAP") if dictionary.get("costCenterSAP") else APIHelper.SKIP
        cost_unit_sap = dictionary.get("costUnitSAP") if dictionary.get("costUnitSAP") else APIHelper.SKIP
        order_no = dictionary.get("orderNo") if dictionary.get("orderNo") else APIHelper.SKIP
        tour_no = dictionary.get("tourNo") if dictionary.get("tourNo") else APIHelper.SKIP
        account_table = dictionary.get("accountTable") if dictionary.get("accountTable") else APIHelper.SKIP
        cost_center = dictionary.get("costCenter") if dictionary.get("costCenter") else APIHelper.SKIP
        cost_unit = dictionary.get("costUnit") if dictionary.get("costUnit") else APIHelper.SKIP
        division_id = dictionary.get("divisionId") if dictionary.get("divisionId") else APIHelper.SKIP
        department_id = dictionary.get("departmentId") if dictionary.get("departmentId") else APIHelper.SKIP
        # Return an object of this model
        return cls(date_of_supply,
                   amount_currency_id,
                   sales_tax_id,
                   description,
                   amount_net,
                   account_table_sap,
                   charge_id,
                   cost_center_sap,
                   cost_unit_sap,
                   order_no,
                   tour_no,
                   account_table,
                   cost_center,
                   cost_unit,
                   division_id,
                   department_id)
