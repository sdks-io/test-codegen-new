# -*- coding: utf-8 -*-

"""
lispublicservices

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from lispublicservices.api_helper import APIHelper
from lispublicservices.configuration import Server
from lispublicservices.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from lispublicservices.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from lispublicservices.models.lis_response_list_int_32 import LISResponseListInt32
from lispublicservices.models.lis_response_list_lis_public_order_status_text import LISResponseListLISPublicOrderStatusText


class StatusManagerController(BaseController):

    """A Controller to access Endpoints in the lispublicservices API."""
    def __init__(self, config):
        super(StatusManagerController, self).__init__(config)

    def create_order_status(self,
                            request,
                            order_id):
        """Does a POST request to /Status/{orderId}.

        Creates an order status.

        Args:
            request (LISCreateOrderStatusRequest): The request.
            order_id (int): The Id oth the order.

        Returns:
            LISResponseListInt32: Response from the API. OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/Status/{orderId}')
            .http_method(HttpMethodEnum.POST)
            .body_param(Parameter()
                        .value(request))
            .template_param(Parameter()
                            .key('orderId')
                            .value(order_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(LISResponseListInt32.from_dictionary)
        ).execute()

    def get_status_order_text_list(self,
                                   language_id,
                                   status_id,
                                   get_all):
        """Does a GET request to /Status/StatusText/{LanguageId}/{StatusId}/{GetAll}.

        Gets the StatusOrderTexts with specific language translation.

        Args:
            language_id (int): The id for the chosen language
            status_id (int): The Id for order status text. Status Id will be
                ignored when GetAll is set.
            get_all (bool): Gets all order status texts. This option shouldn't
                be used frequently because a full table scan will be executed
                for the data table.

        Returns:
            LISResponseListLISPublicOrderStatusText: Response from the API.
                OK

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/Status/StatusText/{LanguageId}/{StatusId}/{GetAll}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('LanguageId')
                            .value(language_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('StatusId')
                            .value(status_id)
                            .should_encode(True))
            .template_param(Parameter()
                            .key('GetAll')
                            .value(get_all)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(LISResponseListLISPublicOrderStatusText.from_dictionary)
        ).execute()
